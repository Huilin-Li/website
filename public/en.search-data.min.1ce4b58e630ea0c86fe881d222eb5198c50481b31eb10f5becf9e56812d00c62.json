[{"id":0,"href":"/docs/project/blogs/bioworld/","title":"Biology World","section":"Blog","content":"\rBiology World\r#\rAstrobiology, NASA.\nIn this section, I want to record and share my studies on Computational Biology.\n"},{"id":1,"href":"/docs/project/blogs/hugo/hugobookgithubaction/","title":"HugoBook+GithubAction","section":"Hugo","content":"\rIn Windows10, build personal website via Hugo-book and Github Actions\r#\rThis blog is about how to use Hugo to create the local website, and then deploy it on GitHub via Github Action. Everything is step by step.\nPrerequisites\r#\rGit Windows 10 VScode Github account Install Hugo\r#\rIn Windows10, right click Windows Powershell and click run as administrator. Refer to How to install chocolatey in Windows to install chocolatey. Refer to Install Hugo on Windows to install Hugo by choco install hugo-extended Make sure Hugo works well by hugo version and we will get the following\nhugo v0.123.7-312735366b20d64bd61bff8627f593749f86c964+extended windows/amd64 BuildDate=2024-03-01T16:16:06Z VendorInfo=gohugoio Create the website using Hugo themes\r#\rFor example, I want to locally work on my website in C:\\myweb folder. Still in Windows Powershell,\nNavigate back to C: driver, and create a new folder by typing mkdir myweb. Create the website by hugo new site Blogs cd Blogs git init Refer to Hugo Book Theme to use hugo-book theme by git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book Till now, if we run hugo server, we will get a plain website locally. In VS code, open Blogs folder.\nIn C:/myweb/Blogs/themes/hugo-book/exampleSite/content.en/, copy docs folder, posts folder and _index.md file to C:/myweb/Blogs/content/. Why I don\u0026rsquo;t copy the menu folder?\nBecause I found menu folder doesn\u0026rsquo;t work when I modified the website as I needed. We can customize the order of menus in leftbar by adding weight in the name.md file. For example, in each name.md file, the parameter weight determine the order of menues.\n---\rweight: 1\rtitle: One name.md file\r--- Run hugo server again, we will see a more well-done website. Deploy on Github by Action\r#\rCreate a public Github repository. For example, if this repository\u0026rsquo;s name is Blogs, your website link will be like this https://huilin-li.github.io/Blogs/\nStill in Windows Powershell, push your local work to this repository by cd C:/myweb/Blogs\rgit add .\rgit commit -m \u0026#34;update\u0026#34;\rgit branch -M main\rgit remote add origin https://github.com/Huilin-Li/Blogs.git\rgit push -u origin main Visit your GitHub repository. From the main menu choose Settings \u0026gt; Pages. In the center of your screen you will see this: Change the Source to GitHub Actions. Click Configure as the highlight in this picture: Go to Host on GitHub Pages, copy the yaml file in step 6 to Blogs/.github/workflows/hugo.yaml, and commit changes. As Step8, Step9, Step10 in Host on GitHub Pages, the deloyment is done. üéâ Update website\r#\rAdd more contents in C:/myweb/Blogs/content/ folder, and then git push to Github repository. Github Action will automaticaly update new contents in https://huilin-li.github.io/Blogs/.\nReferences\r#\rHow to install chocolatey in Windows Hugo with Git Hub Pages on Windows Using GitHub Pages with Actions to deploy Hugo sites in seconds - Tommy Byrd // HugoConf 2022 Hugo Book Theme Host on GitHub Pages „ÄêHugo„Äëhugo-book‰∏ªÈ¢ò‰ΩøÁî® Thanks!\r#\rReally appreciate your time for reading my blog, and bless you enjoy your day! If you have any suggestions or comments, please leave them below! (You don\u0026rsquo;t need to login to postüòâ, feel free to add posts.)\n"},{"id":2,"href":"/docs/project/me/","title":"Keep Things Simple","section":"Project","content":"\rKeep Things Simple\r#\r"},{"id":3,"href":"/docs/project/blogs/bioworld/binderdesign/","title":"TP Binder Design","section":"Biology World","content":"\rBinder Design\r#\rIn this blog, I want to make notes on how I design the binder of the target protein using RFdiffusion, ProteinMPNN-FastRelax and so on.\nAF-A2VEY9-F1, Alphafold.\nIn this case, I take the A2VEY9 as the example. Its 3D view is here\nStep0: Labaries and Helpful tools\r#\rfrom biopandas.pdb import PandasPdb from itertools import chain from Bio import PDB import numpy as np import pandas as pd import plotly.express as px import plotly.graph_objects as go from sklearn.cluster import KMeans I also programmed some helpful tools for computations. We could leave them here, and when these tools are used, we come back and check them.\rdef residue_remove(pdbfile, remove_ids, outputName): \u0026#34;\u0026#34;\u0026#34; Remove residues based on positions. Assumption: pdbfile only has A chain \u0026#34;\u0026#34;\u0026#34; residue_to_remove = [] pdb_io = PDB.PDBIO() pdb_parser = PDB.PDBParser() structure = pdb_parser.get_structure(\u0026#34; \u0026#34;, pdbfile) model = structure[0] chain = model[\u0026#34;A\u0026#34;] for residue in chain: id = residue.id if id[1] in remove_ids: residue_to_remove.append(residue.id) for residue in residue_to_remove: chain.detach_child(residue) pdb_io.set_structure(structure) pdb_io.save(outputName) return def update_resnum(pdbfile): \u0026#34;\u0026#34;\u0026#34; üåü CHANGE RESIDUE NUMBER from discrete position IDs to continuous position IDs Assumption: pdbfile only has A chain \u0026#34;\u0026#34;\u0026#34; pdb_io = PDB.PDBIO() pdb_parser = PDB.PDBParser() structure = pdb_parser.get_structure(\u0026#34; \u0026#34;, pdbfile) model = structure[0] chain = model[\u0026#34;A\u0026#34;] print(len([i for i in chain.get_residues()])) new_resnums = list(range(1, 1+len([i for i in chain.get_residues()]))) for i, residue in enumerate(chain.get_residues()): res_id = list(residue.id) res_id[1] = new_resnums[i] residue.id = tuple(res_id) pdb_io.set_structure(structure) pdb_io.save(pdbfile.split(\u0026#39;pdb\u0026#39;)[0] + \u0026#39;_update_resnum.pdb\u0026#39;) return def point_to_plane_dist(p, p0, p1, p2): \u0026#34;\u0026#34;\u0026#34; The distance from point p to the plane determined by three points (p0, p1, p2) :param p: point p :param p0, p1, p2: three points determine one plane :return: the distance between point to plane \u0026#34;\u0026#34;\u0026#34; u = p1 - p0 v = p2 - p0 # vector normal to plane n = np.cross(u, v) n /= np.linalg.norm(n) p_ = p - p0 dist_to_plane = np.dot(p_, n) return dist_to_plane Step1: Load the target protein.\r#\rThe pdb file can be downloaded here.\ntarget_pdb = PandasPdb().read_pdb(\u0026#39;AF-A2VEY9-F1-model_v4.pdb\u0026#39;) # read structure information into pd.DataFrame target_df = target_pdb.df[\u0026#39;ATOM\u0026#39;] Step2: Truncate target protein\r#\rFor example, I want to remove AAs with very low pLDDT and AAs who are located in the cell membrane. By selecting the most big dark green area, we exclude AAs with very low pLDDT score from highlighted areas. We collect positions of AAs with very low pLDDT are (1-13, 336-693).\nhttps://alphafold.ebi.ac.uk/entry/A2VEY9\nAt the same time, we can get positions of AAs who are located in the transmembrane parts from Subcellular Location section here.\nhttps://www.uniprot.org/uniprotkb/A2VEY9/entry#subcellular_location\n# truncating ids truncating_ids = set(list(range(1,14))+list(range(336,694))+list(range(43,64))+list(range(72,93))+list(range(191,212))+list(range(233,254))+list(range(347,368))) len(truncating_ids) #=455 residue_remove(pdbfile=\u0026#34;AF-A2VEY9-F1-model_v4.pdb\u0026#34;, remove_ids=truncating_ids, outputName=\u0026#34;truncation.pdb\u0026#34;) Let\u0026rsquo;s check this truncated protein in PyMol! We can see that the original protein becomes two much smaller parts, but these two parts are more robust to analysis in next steps.\nOriginal protein (red) and Truncated protein(green)\nStep3. Visualize truncation.pdb with only ùê∂ùõΩ ATOM\r#\rHere, we take ùê∂ùõΩ ATOM as the represent of each AA.\ntruncation = PandasPdb().read_pdb(\u0026#34;truncation.pdb\u0026#34;) cols = [\u0026#34;atom_name\u0026#34;, \u0026#34;residue_name\u0026#34;, \u0026#34;residue_number\u0026#34;, \u0026#34;x_coord\u0026#34;, \u0026#34;y_coord\u0026#34;, \u0026#34;z_coord\u0026#34;] df = truncation.df[\u0026#34;ATOM\u0026#34;][cols] df_CB = df[df[\u0026#34;atom_name\u0026#34;]==\u0026#34;CB\u0026#34;] # visualization fig = go.Figure(data=[go.Scatter3d(x=df_CB[\u0026#34;x_coord\u0026#34;], y=df_CB[\u0026#34;y_coord\u0026#34;], z=df_CB[\u0026#34;z_coord\u0026#34;], name=\u0026#34;\u0026#34;, hoverinfo=\u0026#34;text\u0026#34;, hovertext=df_CB[\u0026#34;residue_number\u0026#34;], mode=\u0026#34;markers\u0026#34;, marker=dict(color=\u0026#34;gray\u0026#34;, size=5))]) fig.update_layout( width=1100, height=1100, margin=dict(l=0, r=0, b=0, t=0), scene=dict(xaxis_title=\u0026#39;x coord\u0026#39;, yaxis_title=\u0026#39;y coord\u0026#39;, zaxis_title=\u0026#39;z coord\u0026#39;)) fig.show() "},{"id":4,"href":"/docs/project/blogs/bioworld/proteinstruture/","title":"4 levels of protein structure","section":"Biology World","content":"There are four levels of protein structure: primary, secondary, tertiary and quaternary.\nPrimary Structure.\r#\rA protein‚Äôs primary structure is the unique sequence of amino acids in each polypeptide chain that makes up the protein.\nfasta file sequence of 20 amino acids Secondary Structure\r#\rReference:\r#\r3.9: Proteins - Protein Structure Thanks!\r#\rReally appreciate your time for reading my blog, and bless you enjoy your day! If you have any suggestions or comments, please leave them below! (You don\u0026rsquo;t need to login to postüòâ, feel free to add posts.)\n"},{"id":5,"href":"/docs/project/blogs/hugo/","title":"Hugo","section":"Blog","content":"\rYour personal website\r#\rThe important reason of why I build this personal website is I want to share my experiences of learning and practicing knowledge and skills. I hope these experiences could help people and save their time a litte bit. Most importantly, this is a great place to share and record solutions to some annoying troubles. üôå\nAt this moment, I use Hugo + Github to build and matintain my personal website. Therefore, you will see how I build and add new features in this website under the framework of Hugo, how I solve troubles, what references I refer, and so on. Let\u0026rsquo;s keep things simple! You can get these following experiences here, and hope they woule be helpful to you!\nIn Windows 10, build personal website via Hugo-book theme and deploy the static website to github via Github Action. Some commands you might use when building a website: Insert images and resize and center images Add emoji Add a travel map Why my local website doesn\u0026rsquo;t update after I update my markdown files? Link to pages and titles Add a comment section Thanks!\r#\rReally appreciate your time for reading my blog, and bless you enjoy your day! If you have any suggestions or comments, please leave them below! (You don\u0026rsquo;t need to login to postüòâ, feel free to add posts.)\n"},{"id":6,"href":"/docs/project/blogs/hugo/hugo/","title":"Hugo Commands","section":"Hugo","content":"\rHow to insert images and resize and center images?\r#\rThe file tree is like\n‚îú‚îÄcontent\r‚îÇ ‚îÇ _index.md\r‚îÇ ‚îÇ\r‚îÇ ‚îî‚îÄdocs\r‚îÇ ‚îú‚îÄblogs\r‚îÇ ‚îÇ ‚îÇ hugo.md\r‚îÇ ‚îÇ ‚îÇ _index.md\r‚îÇ ‚îÇ ‚îÇ\r‚îÇ ‚îÇ ‚îî‚îÄimages\r‚îÇ ‚îÇ Nice.png In hugo.md file, we add Nice.png and scale it by\n{{\u0026lt; figure src=\u0026#34;../images/Nice.png\u0026#34; width=\u0026#34;400\u0026#34; alt=\u0026#34; \u0026#34; \u0026gt;}} Why we need to add ../ in front of images folder, altough hugo.md file and images folder are at the same level? Because Hugo system sees hugo.md as a foler too. However, Hugo system sees _index.md as a file! Therefore, If we want to insert iamges in _index.md file, the command will be like:\n{{\u0026lt; figure src=\u0026#34;./images/Nice.png\u0026#34; width=\u0026#34;400\u0026#34; alt=\u0026#34; \u0026#34; \u0026gt;}} Center the image?\n\u0026lt;center\u0026gt;{ {\u0026lt;figure src=\u0026#34;../images/Nice.png\u0026#34; width=\u0026#34;400\u0026#34; alt=\u0026#34; \u0026#34;\u0026gt;} }\u0026lt;/center\u0026gt; At the same time, in hugo.toml, add\n[markup]\r[markup.goldmark]\r[markup.goldmark.renderer]\runsafe = true How to add emoji?\r#\rDirectly copy emoji icon üëã and paste to .md file, instead of using :wave:.\nEmoji Cheat Sheet: https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md\nHow to add a travel map in Hugo?\r#\rRefer to this article\nNOTE:\nIn {{\u0026lt; openstreetmap mapName=\u0026quot;\u0026lt;your map name\u0026gt;\u0026quot; \u0026gt;}}, the \u0026lt;your map name\u0026gt; is not the name you give to your map, but the name in the website link of your map. For example, I created a map whose name is Travel, I need to use travel_1036974 in the hugo shortcode. Why my local website doesn\u0026rsquo;t update after I update my markdown files?\r#\rGood question. I also find my local website does not update although I have save my changes. I am not clear the excat reason, but It works well if I Pree Ctrl+C to stop the local host, and hugo server again, I can see the updated website in http://localhost:1313/.\nHow to link pages and tiles?\r#\rI am in now.md file now, and there is another page.md which has #Title I want to link. I want to link to page.md and link to #Title I want to link. In page.md file, add an anchor:\n# Title I want to link {#anchor} In now.md file, add commands:\n[text] ( {{\u0026lt; ref \u0026#34;./pages.md\u0026#34; \u0026gt;}} ) # link to one page [text] ( {{\u0026lt; ref \u0026#34;./pages.md#anchor\u0026#34; \u0026gt;}} ) # link to the title I want to add a comment section (via Cactus Comments).\r#\rRegister a Matrix account via https://app.element.io/#/login. Login. register comments by The name we will use to add comment section is huilinBlog. Create and add chat.html. In my case, my root directory is Blogs/ and chat.html is added to Blogs/layouts/shortcodes/ in which shortcodes folder is also created by yourself. ‚îú‚îÄ.github\r‚îú‚îÄlayouts\r‚îÇ ‚îî‚îÄshortcodes\r‚îî‚îÄthemes\r‚îú‚îÄhugo-book\r‚îÇ ‚îú‚îÄ.github\r‚îÇ ‚îú‚îÄlayouts\r‚îÇ ‚îÇ ‚îú‚îÄshortcodes NOTE: Do not add chat.html to themes/layouts/shortcodes/, because we are not authorized to modify the the theme github via git push and so on.\nCopy the following and paste to chat.html, and replace \u0026lt;YOUR-SITE-NAME\u0026gt; with comments, like siteName: \u0026quot;comments\u0026quot;, \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://latest.cactus.chat/cactus.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://latest.cactus.chat/style.css\u0026#34; type=\u0026#34;text/css\u0026#34;\u0026gt;\r\u0026lt;div id=\u0026#34;comment-section\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;script\u0026gt;\rinitComments({\rnode: document.getElementById(\u0026#34;comment-section\u0026#34;),\rdefaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34;,\rserverName: \u0026#34;cactus.chat\u0026#34;,\rsiteName: \u0026#34;\u0026lt;YOUR-SITE-NAME\u0026gt;\u0026#34;,\rcommentSectionId: \u0026#34;{{ index .Params 0 }}\u0026#34;\r})\r\u0026lt;/script\u0026gt; Add the chat comment section to post. References\r#\rhugo book demo „ÄêHugo„Äëhugo-book‰∏ªÈ¢ò‰ΩøÁî® hugoÂçöÂÆ¢ ÊñáÂÜÖÊèíÂÖ•ÂõæÁâá How to render markdown url with .md to correct link Linking pages in Hugo/markdown Added Cactus Comments to Hugo Cactus Comments Thanks!\r#\rReally appreciate your time for reading my blog, and bless you enjoy your day! If you have any suggestions or comments, please leave them below! (You don\u0026rsquo;t need to login to postüòâ, feel free to add posts.)\n"},{"id":7,"href":"/docs/project/travel/","title":"World","section":"Project","content":"\rWorld\r#\r"},{"id":8,"href":"/docs/project/blogs/shell/","title":"Bash Scripts","section":"Blog","content":"\rBash Scripts\r#\rHow to discard changes in VScode?\r#\rNavigate to reporsitory (has .github folder) with changes. Then, git restore \u0026lt;file\u0026gt; Activate conda environment in bash script\r#\rsource ~/miniconda3/etc/profile.d/conda.sh conda activate ENV SBATCH Array jobs\r#\r#SBATCH -J array-job\t#SBATCH -a 1-3 #SBATCH -o array-job.%A.%a.log id_list=\u0026#34;./id_list.txt\u0026#34; id=`head -n $SLURM ARRAY TASK ID $id_list | tail -n 1` python3 script.py -in $id "},{"id":9,"href":"/posts/%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E4%BF%A1%E6%81%AF/","title":"ÊâπÈáèÊõ¥Êñ∞Êú¨Âú∞‰ª£Á†Å‰ªìÂ∫ì‰ø°ÊÅØ","section":"ÊàëÁöÑÂçöÂÆ¢","content":"\rÂâçË®Ä\r#\rÊú¨Âú∞‰ªìÂ∫ìÈ°πÁõÆÂæàÂ§öÔºå‰ø°ÊÅØÂèà‰∏çÊòØÊúÄÊñ∞ÔºåËá™Â∑±Âèà‰∏çÊÉ≥ÈáçÊñ∞ÊãâÂèñÈ°πÁõÆ„ÄÇ\nÊâÄ‰ª•Â∞±Êï¥‰∫Ü‰∏Ä‰∏™ÊâπÈáèÊõ¥Êñ∞Êú¨Âú∞‰ª£Á†Å‰ªìÂ∫ì‰ø°ÊÅØËÑöÊú¨ÔºåËÆ∞ÂΩï‰∏Ä‰∏ã„ÄÇ\n‰ª£Á†Å\r#\r# ÂΩìÂâçÁõÆÂΩï basedir=`pwd` master=\u0026#34;master\u0026#34; mybranch=\u0026#34;mybranch\u0026#34; for dir in $(ls $basedir); do if [ -d $basedir/$dir ]; then branch=`cd $basedir/$dir \u0026amp;\u0026amp; git branch | sed -n \u0026#39;/\\* /s///p\u0026#39;` yes=\u0026#34;y\u0026#34; if [[ $branch != $master \u0026amp;\u0026amp; $branch != $mybranch ]]; then read -p \u0026#34;update $basedir/$dir -- $branch: y/n/f\u0026#34; yes fi # ÂàáÊç¢Âà∞masterÂàÜÊîØÔºåÂπ∂Âà†Èô§ÂéüÂàÜÊîØ if [[ $yes = \u0026#39;f\u0026#39; ]] \u0026amp;\u0026amp; [[ $branch != $master \u0026amp;\u0026amp; $branch != $mybranch ]]; then cd $basedir/$dir \u0026amp;\u0026amp; git branch -D master cd $basedir/$dir \u0026amp;\u0026amp; git checkout -b master origin/master \u0026amp;\u0026amp; git remote update origin --prune cd $basedir/$dir \u0026amp;\u0026amp; git branch -D $branch fi # Êõ¥Êñ∞ÂàÜÊîØ‰ø°ÊÅØ if [[ $yes = \u0026#39;y\u0026#39; ]] \u0026amp;\u0026amp; [[ $branch = $master || $branch = $mybranch ]]; then echo \u0026#34;ÂºÄÂßãÊõ¥Êñ∞‰ªìÂ∫ì„Äê$dir„Äë...\u0026#34; cd $basedir/$dir \u0026amp;\u0026amp; git pull origin master \u0026amp;\u0026amp; git remote update origin --prune echo \u0026#34;Êõ¥Êñ∞‰ªìÂ∫ì„Äê$dir„ÄëÂÆåÊàê\u0026#34; fi fi done "},{"id":10,"href":"/posts/%E4%B8%80%E6%AC%A1%E7%BC%96%E8%BE%91%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE%E8%AE%BE%E8%AE%A1%E6%80%BB%E7%BB%93/","title":"‰∏ÄÊ¨°ÁºñËæëÂ§ßÈáèÊï∞ÊçÆËÆæËÆ°ÊÄªÁªì","section":"ÊàëÁöÑÂçöÂÆ¢","content":"\rËÆ∞ÂΩïËÆ∞ÂΩï\r#\r‰∫ßÂìÅ‰∏ãÊù•‰∏Ä‰∏™ÈúÄÊ±ÇÔºåÊòØÂÅö‰∏Ä‰∏™‰ª∑Ê†ºÁ≠ñÁï•ÂäüËÉΩÔºåÊµÅÁ®ãÂ§ßÊ¶ÇÊòØÂª∫Á´ã‰∏Ä‰∏™Á≠ñÁï•ÔºåÁÑ∂ÂêéÊ∑ªÂä†‰∏ÄÊâπÂïÜÂìÅÔºåÂØπËøô‰∫õÂïÜÂìÅËøõË°åËÆæÁΩÆËßÑÂàô„ÄÇ\nÂú®ÂàÜÊûêÁöÑÊó∂ÂÄôÔºåÂèëÁé∞‰∏Ä‰∏™ÈóÆÈ¢òÔºå‰∫ßÂìÅ‰∏äÈúÄË¶ÅÂØπ‰∏ÄÊâπÂïÜÂìÅÊï∞ÊçÆËøõË°åÁºñËæëÔºåÂÖ®ÈÉ®ÁºñËæëÂÆåÊàê‰πãÂêéÊâç‰øùÂ≠òÔºåÁºñËæëÂÆåÊàê‰πãÂêé‰πüÂèØËÉΩ‰∏¢ÂºÉ„ÄÇ\nÈóÆÈ¢òÊòØËøô‰∏ÄÊâπÊï∞ÊçÆÊúâÂèØËÉΩ‰ºöÂæàÂ§ßÔºåËææÂà∞10Âá†‰∏áÁöÑÊï∞ÊçÆÔºå‰∏çËÉΩËÆ©ÂâçÁ´ØÂÖ®ÈÉ®Êãâ‰∏ãÊù•ÔºåÁºñËæëÂÆåÊàêÂêéÔºåÂÜç‰∏ÄÊ¨°‰º†ÁªôÂêéÁ´Ø‰øùÂ≠ò„ÄÇÊãâÂèñÂÖ®ÈÉ®Êï∞ÊçÆÔºå‰ºöÂØπÊúçÂä°Á´ØÈÄ†ÊàêÂæàÂ§ßÂéãÂäõÔºåËøòÂèØËÉΩÈÄ†ÊàêÂÜÖÂ≠òÈóÆÈ¢òÔºåÂêåÊó∂ÂâçÁ´Ø‰∏ÄÊ¨°ÂèëÈÄÅÂ§ßÈáèÊï∞ÊçÆÁªôÂêéÁ´Ø‰øùÂ≠ò‰πüÊòØÊúâÈóÆÈ¢òÁöÑÔºå‰∏ÄÊòØ‰º†ËæìÈóÆÈ¢òÔºåÂ§ßÈáèÊï∞ÊçÆÁΩëÁªú‰º†ËæìÊÖ¢Ôºå‰∫åÊòØÂêéÁ´ØÂ§ÑÁêÜÈóÆÈ¢òÔºåÈúÄË¶ÅÂ§ÑÁêÜÂ§ßÈáèÊï∞ÊçÆÔºåÂÜç‰∏ÄÊ¨°ÊÄß‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÔºåÊï¥‰∏™ÊµÅÁ®ã‰∏ãÊù•ÊòØ‰ºöÂç†Áî®‰∫ÜÂ§ßÈáèÊó∂Èó¥ÔºåÊé•Âè£ËØ∑Ê±ÇÂæàÊÖ¢Ôºõ‰ªéÁî®Êà∑Á´Ø‰ΩìÈ™åÊù•ËØ¥ÔºåÊòØÂäüËÉΩÂç°È°ø„ÄÇ\nÂè™ËÉΩÂÜçÊÉ≥ÊÉ≥ÂÖ∂‰ªñÊñπÊ°àÔºåÊåâÁÖß‰ª•ÂâçÁöÑÊìç‰ΩúÔºåÁºñËæëÁ¨¨‰∏ÄÈ°µÊï∞ÊçÆÔºå‰øùÂ≠ò‰∏ãÊù•ÔºåÊé•ÁùÄÂØπ‰∏ã‰∏ÄÈ°µËøõË°åÁºñËæëÔºåÂÜç‰øùÂ≠ò„ÄÇËøôÁßçÊñπÂºè‰∏ÄÊ¨°ËØ∑Ê±ÇÂíåÊìç‰ΩúÁöÑÊï∞ÊçÆÈáè‰∏çÂ§öÔºåËØ∑Ê±ÇÂíåÂìçÂ∫î‰∏äÊòØÊ≤°Êúâ‰ªÄ‰πàÈóÆÈ¢òÔºå‰ΩÜÊòØÁºñËæëÂÆå‰∏ÄÈ°µÂ∞±‰øùÂ≠òÔºåËææ‰∏çÂà∞‰∫ßÂìÅ‰∏äÁöÑÊïàÊûúÔºå‰∏ÄÊ¨°ÁºñËæëÂÆåÊâÄÊúâÁöÑÂïÜÂìÅÔºåÁºñËæëÂÆåÂêéÂÜç‰øùÂ≠ò„ÄÇ\nÊâÄ‰ª•ÔºåÊàëÂú®ÊÉ≥Â¶ÇÊûú‰∏ÄÊ¨°ËØ∑Ê±ÇÂ∞ëÈáèÊï∞ÊçÆÔºåÊúÄÂêéÂèàÊòØ‰∏ÄÊ¨°ÊÄß‰øùÂ≠òÁºñËæëÂêéÁöÑÁªìÊûúÔºåÈÇ£Â∞±ËææÂà∞Êàë‰ª¨ÁöÑË¶ÅÊ±Ç„ÄÇ\nÈ°∫ÁùÄËøô‰∏™ÊÄùË∑ØÔºåÂ¶ÇÊûú‰ΩøÁî®‰∏Ä‰∏™‰∏≠Èó¥Ë°®ÊääËøô‰∫õÊìç‰ΩúÊï∞ÊçÆËΩ¨ÁßªÂà∞ÊúçÂä°Á´ØÔºåÂÖà‰∏ç‰øùÂ≠òÔºåÁ≠âÂÖ®ÈÉ®ÁºñËæëÂÆåÊàêÂêéÂÜç‰øùÂ≠òÔºåÊòØ‰∏çÊòØÂ∞±ÂèØ‰ª•ËææÂà∞Ëøô‰∏™ÊïàÊûúÔºåÊØè‰∏ÄÈ°µ‰øÆÊîπÁöÑÊï∞ÊçÆÈÉΩÊöÇÂ≠òÂú®ËøôÈáåÔºåÊúÄÂêé‰øùÂ≠òÊó∂ÂÜç‰∏ÄËµ∑‰øùÂ≠ò‰∏äÂéªÔºåÂú®ÂõûÊòæÊó∂Ôºå‰πü‰ºòÂåñÂõûÊòæÁºñËæëÂêéÁöÑÊï∞ÊçÆÔºåËøôÊ†∑Â∞±ËææÂà∞‰∫ÜÂèØ‰ª•‰∏ÄÊ¨°ÁºñËæëÂá†ÁôæÈ°µÔºåÊúÄÂêéÂÜç‰∏ÄËµ∑‰øùÂ≠òÔºåÂú®ÊÄßËÉΩ‰∏äÂèàÊ≤°Êúâ‰ªÄ‰πàÈóÆÈ¢ò„ÄÇ\nÂΩìÁÑ∂ÔºåËøôÊ†∑ÂÅöËøòÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÈÇ£Â∞±ÊòØÂú®ÁºñËæëÊó∂Ôºå‰ºö‰øùÂ≠ò‰∏Ä‰∏™‰∏¥Êó∂Êï∞ÊçÆÔºåÂ¶ÇÊûúÊàë‰ª¨ÊØèÊ¨°ÈÉΩÂè™ÊòØ‰øÆÊîπÔºåÊ≤°ÊúâËøõË°å‰øùÂ≠òÔºåÈÇ£Ë°®‰∏äÁöÑ‰∏¥Êó∂Êï∞ÊçÆ‰ºö‰∫ßÁîüÂæàÂ§öÔºåÊâÄ‰ª•ËøôÈáå‰πüÈúÄË¶ÅÂÅö‰∏Ä‰∏™Êï∞ÊçÆÊ∏ÖÁêÜÊìç‰ΩúÔºå‰πüÂ∞±ÊòØÊØèÂ§©„ÄÅÊàñËÄÖÊØè‰∏™Â∞èÊó∂Ê∏ÖÁêÜ‰∏Ä‰∏ãÊ≤°Áî®ÁöÑÊï∞ÊçÆ„ÄÇ\n"},{"id":11,"href":"/posts/%E4%B8%80%E6%AC%A1%E8%8F%9C%E9%B8%9F%E7%94%B5%E5%AD%90%E9%9D%A2%E5%8D%95%E8%93%9D%E7%89%99%E6%89%93%E5%8D%B0%E6%94%B9%E9%80%A0%E6%80%BB%E7%BB%93/","title":"‰∏ÄÊ¨°ËèúÈ∏üÁîµÂ≠êÈù¢ÂçïËìùÁâôÊâìÂç∞ÊîπÈÄ†ÊÄªÁªì","section":"ÊàëÁöÑÂçöÂÆ¢","content":"\rÂâçË®Ä\r#\rËèúÈ∏üÁîµÂ≠êÈù¢ÂçïÂπ≥Âè∞ÂÅúÊ≠¢ËìùÁâôÊâìÂç∞ÊúçÂä°ËÆ¢Ë¥≠ÔºåÂæàÂ∑ßÂêàÔºåÂÖ¨Âè∏Â∞±‰ΩøÁî®Âà∞‰∫Ü‰ªñÔºå‰∏Ä‰∏™ÊòØPCËèúÈ∏üÁªÑ‰ª∂Ôºå‰∏Ä‰∏™ÊòØËìùÁâôÊâìÂç∞ÔºåÂêéËÄÖÁöÑÂÅúÁî®‰ºöÂØπ‰∏öÂä°‰∏ä‰∫ßÁîü‰∏Ä‰∫õÂΩ±ÂìçÔºåÊâÄ‰ª•‰πüË¶ÅÂØπÂÖ∂ÂÅö‰∏Ä‰∫õ‰∏öÂä°‰∏äÂ§ÑÁêÜ„ÄÇ\nËèúÈ∏üÁîµÂ≠êÈù¢ÂçïÂÖ¨ÂëäÔºö\nÂ∞äÊï¨ÁöÑÂºÄÂèëËÄÖÔºö ÊÇ®Â•ΩÔºÅ‰∏∫Ëøõ‰∏ÄÊ≠•ËêΩÂÆûÂõΩÂÆ∂„ÄÅÂú∞ÊñπÊ≥ïÂæã„ÄÅÊ≥ïËßÑÂÖ≥‰∫éÂä†Âº∫Ê∂àË¥πËÄÖ‰∏™‰∫∫‰ø°ÊÅØ‰øùÊä§‰ª•ÂèäËßÑËåÉÊï∞ÊçÆÂ§ÑÁêÜË°å‰∏∫ÁöÑÂÖ∑‰ΩìË¶ÅÊ±ÇÔºåÊàëÂÖ¨Âè∏Ëá™2023Âπ¥6Êúà30Êó•Ëµ∑ÂÅúÊ≠¢ËìùÁâôÊâìÂç∞ÊúçÂä°ËÆ¢Ë¥≠Ôºå6Êúà30ÂâçËÆ¢Ë¥≠ÁöÑËìùÁâôÊâìÂç∞ÊúçÂä°Âú®ÊúâÊïàÊúüÂÜÖ‰ªçÂèØÁªßÁª≠‰ΩøÁî®„ÄÇÂè¶Â§ñÔºåÊÇ®ÂèØÁªßÁª≠‰ΩøÁî®Ë£ÖÈ∏üÊèê‰æõÁöÑ4G‰∫ëÊâìÂç∞ÊúçÂä°ÂèäPCËèúÈ∏üÁªÑ‰ª∂ÊúâÁ∫øÊâìÂç∞ÊúçÂä°Ôºå‰∏çÂèóÂΩ±Âìç„ÄÇ Â¶ÇÊÇ®ÂØπËìùÁâôÊâìÂç∞Êé•Âè£ÂÖ≥Èó≠‰∫ãÂÆúÊúâ‰ªª‰ΩïÁñëÈóÆÔºåÂèØÂä†ÂÖ•ËèúÈ∏üÈíâÈíâÁæ§ÔºàÁæ§Âè∑Ôºö44766762ÔºâËøõË°åÊ≤üÈÄö„ÄÇ ÊÑüË∞¢ÊÇ®ÂØπÂπ≥Âè∞ÁöÑÊîØÊåÅ‰∏éÂÖ≥Ê≥®ÔºÅÊµôÊ±üËèúÈ∏ü‰æõÂ∫îÈìæÁÆ°ÁêÜÊúâÈôêÂÖ¨Âè∏ 2023Âπ¥5Êúà12Êó•\nÈóÆÈ¢òÂàÜÊûê\r#\r‰∏∫‰∫ÜÂáèÂ∞ëÂØπ‰∏öÂä°ÁöÑÂΩ±ÂìçÔºåÂÅö‰∫ÜÂπ∂Ë°åÁöÑ‰∏§Â•óÊñπÊ°àÔºö\n1„ÄÅÁõ¥Êé•ÂÅúÊ≠¢Ê≠§ÊúçÂä°ÔºåËÆ©Áî®Êà∑ÂéªPCÁ´ØÊâìÂç∞ÔºåÂπ∂ÂÅöÂ•ΩÊèêÁ§∫Ôºõ\n2„ÄÅËá™Â∑±Ëß£ÊûêËèúÈ∏üÊ®°ÊùøÁöÑÊâìÂç∞Êåá‰ª§„ÄÇ\nÂ¶ÇÊûúËÉΩÂÆåÊàêÊ®°ÊùøÊåá‰ª§ÁöÑËß£ÊûêÔºåÂ∞±Áõ¥Êé•‰∏äÊåá‰ª§Ëß£ÊûêÔºåÈÇ£ÊòØÈùûÂ∏∏Áî®ÂÆåÁæéÁöÑÔºåÂØπÁî®Êà∑Èõ∂ÂΩ±ÂìçÔºåÊó†ÁºùÂπ≥ÊªëËøáÂéªÔºõÂΩìÁÑ∂ÔºåËß£ÊûêËèúÈ∏üÊ®°ÊùøÁöÑÊåá‰ª§‰πü‰∏çÊòØ‰∏Ä‰ª∂ÁÆÄÂçïÁöÑ‰∫ãÊÉÖÔºåÊó∂Èó¥‰πüÂæàÁ¥ßÂº†ÔºåÂè™Êúâ‰∏ÄÂë®Â§öÁöÑÊó∂Èó¥ÔºåÊâÄ‰ª•‰πüÂáÜÂ§á‰πüÁ¨¨‰∫åÂ•óÊñπÊ°àÔºå‰∏çËÉΩ‰∏äÊåá‰ª§Ëß£ÊûêÔºåÂ∞±ËÆ©Áî®Êà∑ÂéªPCÁ´ØÊâìÂç∞ÔºåÂêåÊó∂ÂèãÂ•ΩÂú∞ÊèêÁ§∫Áî®Êà∑„ÄÇ\n‰∏Ä‰∫õÈáçË¶Å‰ø°ÊÅØÁöÑÊï¥ÁêÜ\nÊï¥ÁêÜÁ≥ªÁªüÈáåÁöÑËÆ¢ÈòÖÁâ©ÊµÅÂÖ¨Âè∏ÔºåÁõÆÂâçÈúÄË¶ÅÂ§ÑÁêÜ‰ª•‰∏ãÁâ©ÊµÅÂ∞±ÂèØ‰ª•Ôºö\n‰∏≠ÈÄöÈÄüÈÄí\tZTO\nÁî≥ÈÄöÂø´ÈÄí\tSTO\nÈüµËææÂø´ÈÄí\tYUNDA\nÂúÜÈÄöÈÄüÈÄí\tYTO\nÂæ∑ÈÇ¶\tDBKD\nËèúÈ∏üCLOUDPRINT_CMD_RENDERÊé•Âè£Á§∫‰æã\nÊâìÂç∞Ê®°ÊùøÁ§∫‰æã\nËèúÈ∏üÁîµÂ≠êÈù¢ÂçïËß£ÊûêÂàÜÊûêËøáÁ®ã\r#\r‰ª•http://cloudprint.cainiao.com/template/standard/401‰∏∫‰æãÔºåÂàÜÊûêËèúÈ∏üÁîµÂ≠êÈù¢ÂçïÁöÑËß£ÊûêËøáÁ®ã„ÄÇ\nÊï¥‰ΩìÊ®°Êùø‰∏ªË¶Å‰ª•jsËØ≠Ê≥ïÂíåxmlÊ†áÁ≠æ‰∏∫‰∏ªÔºåÊâÄ‰ª•ÊúâÂèØËÉΩÊòØÂÖà‰ΩøÁî®jsÊ®°ÊùøÂºïÊìéËß£ÊûêÔºåÂÜçËß£ÊûêxmlÊàêÊåá‰ª§Ôºö\nÊ®°Êùø + Êï∞ÊçÆ -\u0026gt; ÈÄöËøájsÊ®°ÊùøÂºïÊìé -\u0026gt; xml Ê®°Êùø -\u0026gt; ÈÄöËøáËß£Êûê xml Ê®°ÊùøÊàêÊåá‰ª§\nÁåúÊµãÂ§ßÊ¶ÇÁöÑËøáÁ®ãÂèØËÉΩÊòØËøôÊ†∑ÁöÑÔºåÊé•‰∏ãÊù•Êàë‰ª¨Â∞±È™åËØÅÊï¥‰∏™ËøáÁ®ãÊòØÂê¶ÂèØË°å„ÄÇ\nÈ™åËØÅjsÊ®°ÊùøÂºïÊìé\r#\rÈÄöËøáÊü•ÊâæÂíåÈ™åËØÅÔºåÂèëÁé∞ejsÂØπ‰ª•‰∏äÁâ©ÊµÅÂÖ¨Âè∏ÁöÑËìùÁâôÊ®°ÊùøÊúâÊïàÔºåÂèØ‰ª•Ê≠£Á°ÆÂú∞Ëß£ÊûêÊàêxml„ÄÇ\nÊ≥®ÊÑèÔºö Ëøô‰∏™Ê®°ÊùøÂºïÊìé‰∏çÊòØËÉΩÂÖ®ÈÉ®ÂÖºÂÆπÊ®°ÊùøÔºå‰ΩÜÊòØÊª°Ë∂≥Êàë‰ª¨ÁöÑÈúÄÊ±Ç‰∫ÜÔºåÂêåÊó∂Áî±‰∫éÊó∂Èó¥ÈóÆÈ¢òÔºåÂ∞±Ê≤°ÊúâÁªßÁª≠È™åËØÅÂÖ∂‰ªñÁöÑjsÊ®°ÊùøÂºïÊìé„ÄÇ\nÊ®°ÊùøÂºïÊìéÊòØ ejsÔºåÂú∞ÂùÄ https://ejs.bootcss.com/#install\n\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;ejs.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; // ÈúÄË¶ÅËá™Â∑±ÊåâÁÖßËèúÈ∏üÊé•Âè£ÊñáÊ°£Â°´ÂÖ•Êï∞ÊçÆ let data = {} let config = { \u0026#34;needMiddleLogo\u0026#34;:\u0026#34;false\u0026#34;, \u0026#34;horizontalCoordinate\u0026#34;:\u0026#34;0\u0026#34;, \u0026#34;verticalCoordinate\u0026#34;:\u0026#34;0\u0026#34;, \u0026#34;needBottomLogo\u0026#34;:\u0026#34;false\u0026#34;, \u0026#34;orientation\u0026#34;:\u0026#34;normal\u0026#34;, \u0026#34;extra\u0026#34;:\u0026#34;{watermark,true}\u0026#34;, \u0026#34;needTopLogo\u0026#34;:\u0026#34;false\u0026#34; }; // ÈúÄË¶ÅËá™Â∑±Â°´ÂÖ•Ê®°ÊùøÂÜÖÂÆπÔºåÁ§∫‰æãÊ®°Êùø http://cloudprint.cainiao.com/template/standard/401 let template = \u0026#34;\u0026#34;; // ÂÆûÁé∞ËèúÈ∏üÊ®°Êùø‰∏≠‰ΩøÁî®Âà∞ÁöÑjsÂáΩÊï∞ context = { formatStartTime(format) { const date = new Date(); // Ëé∑ÂèñÂΩìÂâçÊó∂Èó¥ // ÊèêÂèñÂπ¥„ÄÅÊúà„ÄÅÊó•„ÄÅÂ∞èÊó∂„ÄÅÂàÜÈíüÂíåÁßí const year = date.getFullYear(); const month = String(date.getMonth() + 1).padStart(2, \u0026#39;0\u0026#39;); const day = String(date.getDate()).padStart(2, \u0026#39;0\u0026#39;); const hours = String(date.getHours()).padStart(2, \u0026#39;0\u0026#39;); const minutes = String(date.getMinutes()).padStart(2, \u0026#39;0\u0026#39;); const seconds = String(date.getSeconds()).padStart(2, \u0026#39;0\u0026#39;); // ÊõøÊç¢Ê†ºÂºèÂ≠óÁ¨¶‰∏≤‰∏≠ÁöÑÂØπÂ∫îÈÉ®ÂàÜ let formattedTime = format.replace(\u0026#39;yyyy\u0026#39;, year); formattedTime = formattedTime.replace(\u0026#39;MM\u0026#39;, month); formattedTime = formattedTime.replace(\u0026#39;dd\u0026#39;, day); formattedTime = formattedTime.replace(\u0026#39;HH\u0026#39;, hours); formattedTime = formattedTime.replace(\u0026#39;mm\u0026#39;, minutes); formattedTime = formattedTime.replace(\u0026#39;ss\u0026#39;, seconds); return formattedTime; }, documentCount() { return \u0026#34;1\u0026#34;; }, documentNumber() { return \u0026#34;1\u0026#34;; } }; // Ëß£Êûê html = ejs.render(template, {\u0026#34;_data\u0026#34;: data.data, \u0026#34;_config\u0026#34;:config, \u0026#34;_context\u0026#34;:context}); console.log(html) \u0026lt;/script\u0026gt; Âà∞Ê≠§ÔºåÊàë‰ª¨ÁöÑÊ®°ÊùøÂ∑≤ÁªèËß£ÊûêÊàêxml‰∫ÜÔºåÊé•‰∏ãÊù•Â∞±ÊòØËß£ÊûêÊàêCPCLÊåá‰ª§„ÄÇ\nxml Ëß£ÊûêÊàêCPCLÊåá‰ª§\r#\rÊâìÂç∞Êú∫ÊâìÂç∞Êåá‰ª§ÁöÑÂçï‰ΩçÊòØdotÔºå‰∏ÄËà¨8dot=1ÊØ´Á±≥ÔºåÊâÄ‰ª•ÁåúÊµãÊ®°ÊùøÊòØ‰ª•ÊØ´Á±≥‰∏∫Âçï‰ΩçÁöÑÔºåÂ∞±ÊåâÁÖßËøô‰∏™ÂÜÖÂÆπÊù•Êêû‰∏™demoÔºåÈ™åËØÅÊòØÂê¶ÂèØË°å„ÄÇ\n\u0026lt;page xmlns=\u0026#34;http://cloudprint.cainiao.com/print\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://cloudprint.cainiao.com/print http://cloudprint-docs-resource.oss-cn-shanghai.aliyuncs.com/lpml_schema.xsd\u0026#34; xmlns:editor=\u0026#34;http://cloudprint.cainiao.com/schema/editor\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;180\u0026#34; splitable=\u0026#34;true\u0026#34; /\u0026gt; Âü∫Á°ÄÊåá‰ª§Ëß£Êûê\r#\rpublic class CpclCommand { public final static String CHARSET = \u0026#34;GB18030\u0026#34;; /** Êåá‰ª§ÂÜÖÂÆπ */ private Vector\u0026lt;Byte\u0026gt; command; public CpclCommand() { this.command = new Vector\u0026lt;\u0026gt;(); } /** * Â¢ûÂä†Êåá‰ª§ * @param array Êï∞ÁªÑ */ public void addCommand(byte[] array) { if(array == null) { return; } List\u0026lt;Byte\u0026gt; byteList = Bytes.asList(array); this.command.addAll(command.size(), byteList); } /** * Â¢ûÂä†Êåá‰ª§ * @param index Á¥¢Âºï * @param array Êï∞ÁªÑ */ public void addCommand(int index, byte[] array) { if (array == null) { return; } List\u0026lt;Byte\u0026gt; byteList = Bytes.asList(array); this.command.addAll(index, byteList); } /** * Â¢ûÂä†Êåá‰ª§ * @param bytes Êåá‰ª§Â≠óËäÇ */ public void addCommand(Vector\u0026lt;Byte\u0026gt; bytes) { if(CollectionUtils.isEmpty(bytes)) { return; } this.command.addAll(bytes); } /** * Â¢ûÂä†Êåá‰ª§ * @param command CPCLÊåá‰ª§ */ public void addCommand(CpclCommand command) { if(command == null) { return; } Vector\u0026lt;Byte\u0026gt; bytes = command.getCommand(); if(!CollectionUtils.isEmpty(bytes)) { this.command.addAll(bytes); } } /** * Ê∑ªÂä†ÊñáÊú¨Êåá‰ª§ * @param str ÊñáÊú¨ÂÜÖÂÆπ */ private void addStrToCommand(String str) { if (StringUtil.isBlank(str)) { return; } byte[] bs = str.getBytes(Charset.forName(CHARSET)); for (int i = 0; i \u0026lt; bs.length; i++) { this.command.add(Byte.valueOf(bs[i])); } } public Vector\u0026lt;Byte\u0026gt; getCommand() { return command; } public void init(int width, int height, int copies) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;!\u0026#34;).add(\u0026#34;0\u0026#34;).add(\u0026#34;200\u0026#34;).add(\u0026#34;200\u0026#34;) // È´òÂ∫¶ÂáèÂéª18‰∏™ÁÇπ .add(String.valueOf(height - 18)) .add(String.valueOf(copies)); addStrToCommand(sj.toString()); // ÊâìÂç∞ÂÆΩÂ∫¶ String s = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;).add(\u0026#34;PAGE-WIDTH\u0026#34;).add(String.valueOf(width)).toString(); addStrToCommand(s); } public void setCn() { // ËÆæÁΩÆ‰∏≠Êñá addStrToCommand(\u0026#34;COUNTRY CHINA\\r\\n\u0026#34;); } public void print() { addStrToCommand(\u0026#34;GAP-SENSE\\r\\n\u0026#34;); addStrToCommand(\u0026#34;FORM\\r\\n\u0026#34;); addStrToCommand(\u0026#34;PRINT\\r\\n\u0026#34;); } /** ÊñáÊú¨Êåá‰ª§ÊñπÂêë */ public enum TEXT { TEXT(\u0026#34;T\u0026#34;), VTEXT(\u0026#34;TV\u0026#34;), TEXT90(\u0026#34;T90\u0026#34;), TEXT180(\u0026#34;T180\u0026#34;), TEXT270(\u0026#34;T270\u0026#34;); private String name; TEXT(String name) { this.name = name; } } /** Â≠ó‰ΩìÂ§ßÂ∞è */ public enum FONT { F0(\u0026#34;0\u0026#34;, 12, 24, 24), F1(\u0026#34;1\u0026#34;, 9, 17, 24), F2(\u0026#34;2\u0026#34;, 12, 24, 24), F3(\u0026#34;3\u0026#34;, 10, 20, 20), F4(\u0026#34;4\u0026#34;, 16, 32, 32), F5(\u0026#34;5\u0026#34;, 9, 17, 24), F6(\u0026#34;6\u0026#34;, 12 ,24, 0), F7(\u0026#34;7\u0026#34;, 12 ,24, 24), F8(\u0026#34;8\u0026#34;, 12 ,24, 24), F10(\u0026#34;10\u0026#34;, 24, 48, 48), F11(\u0026#34;11\u0026#34;, 8, 16, 24), F13(\u0026#34;13\u0026#34;, 12 ,24, 24), F20(\u0026#34;20\u0026#34;, 8, 16, 16), F24(\u0026#34;24\u0026#34;, 12 ,24, 24), F41(\u0026#34;41\u0026#34;, 8, 12, 0), F42(\u0026#34;42\u0026#34;, 12, 20, 0), F43(\u0026#34;43\u0026#34;, 16, 24, 0), F44(\u0026#34;44\u0026#34;, 24, 32, 0), F45(\u0026#34;45\u0026#34;,32,48, 0), F46(\u0026#34;46\u0026#34;,14,19, 0), F47(\u0026#34;47\u0026#34;,21,27, 0), F48(\u0026#34;48\u0026#34;,14,25, 0), F49(\u0026#34;49\u0026#34;,28,56, 0), F55(\u0026#34;55\u0026#34;,8,16, 16) ; private String value; private int width; private int cnWidth; private int height; FONT(String value, int width, int height, int cnWidth) { this.value = value; this.width = width; this.cnWidth = cnWidth; this.height = height; } public int getWidth() { return width; } public int getHeight() { return height; } public int getCnWidth() { return cnWidth; } } /** * ÊñáÊú¨Êåá‰ª§ {command} {font} {size} {x} {y} {data} * @param text Êåá‰ª§ * @param font Â≠ó‰Ωì * @param size ËØ∑ËæìÂÖ•‰ªªÊÑèÊï∞Â≠ó * @param x Ê®™ÂêëËµ∑Âßã‰ΩçÁΩÆ * @param y Á∫µÂêëËµ∑Âßã‰ΩçÁΩÆ * @param data Ë¶ÅÊâìÂç∞ÁöÑÊñáÊú¨ */ public void text(TEXT text, FONT font, int size, int x, int y, String data) { if (StringUtil.isBlank(data)) { data = \u0026#34; \u0026#34;; } StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(text.name).add(font.value).add(String.valueOf(size)). add(String.valueOf(x)).add(String.valueOf(y)).add(data); this.addStrToCommand(sj.toString()); } public void addSimulateBlock(TEXT text, FONT font, int size, int x, int y, String data, int width, int xScal, int yScal, int gap, boolean isCenter) { // Âè™ÊîØÊåÅÊ≠£ÊñπÂêë if (StringUtil.isNotBlank(data)) { xScal = xScal \u0026lt;= 0 ? 1 : xScal; int index = getStrIndex(data, width, font, xScal); if (index \u0026lt;= 0) { return; } // Êç¢Ë°å int i = data.indexOf(\u0026#34;\\n\u0026#34;); if (i \u0026gt; -1 \u0026amp;\u0026amp; index \u0026gt; i) { index = i; data = data.replaceFirst(\u0026#34;\\n\u0026#34;, \u0026#34;\u0026#34;); } String printSubData = data.substring(0, index).replaceFirst(\u0026#34;\\n\u0026#34;, \u0026#34;\u0026#34;); if (isCenter) { int strLen = getStrLen(printSubData, font, xScal); int posX = x + (width - strLen) / 2; text(text, font, size, posX, y, printSubData); } else { text(text, font, size, x, y, printSubData); } if (index \u0026lt; data.length()) { int nextY = 0; if (gap == 0) { nextY = y + font.getHeight() * yScal * 3 / 2; } else { nextY = y + font.getHeight() * yScal + gap; } String nextText = data.substring(index); addSimulateBlock(text, font, size, x, nextY, nextText, width,xScal, yScal, gap, isCenter); } } } public int calcSimulateBlockNextY(TEXT text, FONT font, int size, int x, int y, String data, int width, int xScal, int yScal, int gap) { // Âè™ÊîØÊåÅÊ≠£ÊñπÂêë if (StringUtil.isNotBlank(data)) { xScal = xScal \u0026lt;= 0 ? 1 : xScal; int index = getStrIndex(data, width, font, xScal); if (index \u0026lt;= 0) { return y; } // Êç¢Ë°å int i = data.indexOf(\u0026#34;\\n\u0026#34;); if (i \u0026gt; -1 \u0026amp;\u0026amp; index \u0026gt; i) { index = i; data = data.replaceFirst(\u0026#34;\\n\u0026#34;, \u0026#34;\u0026#34;); } if (index \u0026lt; data.length()) { int nextY = 0; if (gap == 0) { nextY = y + font.getHeight() * yScal * 3 / 2; } else { nextY = y + font.getHeight() * yScal + gap; } String nextText = data.substring(index); return calcSimulateBlockNextY(text, font, size, x, nextY, nextText, width,xScal, yScal, gap); } return y; } return y; } /** * Ëé∑ÂèñÂ≠ó‰ΩìÂÆΩÂ∫¶ÔºåÊï∞Â≠óÂíå‰∏≠ÊñáÂÆΩÂ∫¶‰∏ç‰∏ÄÊ†∑ * @param str Â≠óÁ¨¶‰∏≤ * @param width ÂèØÊâìÂç∞ÂÆΩÂ∫¶ * @param font Â≠ó‰ΩìÂÆΩÂ∫¶ * @param xScal ÊîæÂ§ßÂÆΩÂ∫¶ * @return ÂèØÊâìÂç∞Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶Á¥¢Âºï */ private int getStrIndex(String str, int width, FONT font, int xScal) { char[] chars = str.toCharArray(); int curWidth = 0; for (int i = 0; i \u0026lt; chars.length; i++) { if ((chars[i] + \u0026#34;\u0026#34;).getBytes().length == 1) { curWidth += font.getWidth() * xScal; } else { curWidth += font.getCnWidth() * xScal; } if (width \u0026lt; curWidth) { return i; } } return chars.length; } private int getStrLen(String str, FONT font, int xScal) { char[] chars = str.toCharArray(); int curWidth = 0; for (int i = 0; i \u0026lt; chars.length; i++) { if ((chars[i] + \u0026#34;\u0026#34;).getBytes().length == 1) { curWidth += font.getWidth() * xScal; } else { curWidth += font.getCnWidth() * xScal; } } return curWidth; } /** * ÂëΩ‰ª§ÂèØÂ∞ÜÂ∏∏È©ªÂ≠ó‰ΩìÊîæÂ§ßÊåáÂÆöÁöÑÊîæÂ§ßÂÄçÊï∞,‰ΩøÁî®‰∫éTEXTÂëΩ‰ª§ÁöÑ‰∏ä‰∏ÄË°å * @param width ÂÆΩÂ∫¶ÊîæÂ§ßÂÄçÊï∞ÔºåÊúâÊïàÊîæÂ§ßÂÄçÊï∞‰∏∫ 1 Âà∞ 16 * @param height È´òÂ∫¶ÊîæÂ§ßÂÄçÊï∞ÔºåÊúâÊïàÊîæÂ§ßÂÄçÊï∞‰∏∫ 1 Âà∞ 16 */ public void setMag(int width, int height) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;SETMAG\u0026#34;).add(String.valueOf(width)).add(String.valueOf(height)); this.addStrToCommand(sj.toString()); } /** * ÂëΩ‰ª§ÂèØÂ∞ÜÂ∏∏È©ªÂ≠ó‰ΩìÂä†Á≤ó * @param bold ÊòØÂê¶Âä†Á≤ó */ public void setBlod(boolean bold) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;SETBLOD\u0026#34;).add(bold ? \u0026#34;1\u0026#34; : \u0026#34;0\u0026#34;); this.addStrToCommand(sj.toString()); } /** * Êù°Á†ÅÁ±ªÂûã * BARCODEÔºàÊàñ BÔºâ Ê®™ÂêëÊâìÂç∞Êù°Á†Å * VBARCODEÔºàÊàñ VBÔºâ Á∫µÂêëÊâìÂç∞Êù°Á†Å */ public enum BARCODE { BARCODE(\u0026#34;B\u0026#34;), VBARCODE(\u0026#34;VB\u0026#34;); private String command; BARCODE(String command) { this.command = command; } } /** * Êù°Á†ÅÁ±ªÂûã */ public enum CODE_TYPE { UPC_A(\u0026#34;UPCA\u0026#34;), UPC_E(\u0026#34;UPCE\u0026#34;),EAN13(\u0026#34;EAN13\u0026#34;),EAN8(\u0026#34;EAN8\u0026#34;), CODE39(\u0026#34;39\u0026#34;),CODE93(\u0026#34;93\u0026#34;), CODE128(\u0026#34;128\u0026#34;),CODABAR(\u0026#34;CODABAR\u0026#34;); private String type; CODE_TYPE(String type) { this.type = type; } } /** * Êù°Á†ÅÂÆΩÈ´òÊØî‰æã */ public enum RATIO { R0(\u0026#34;0\u0026#34;, 1.5F), R1(\u0026#34;1\u0026#34;, 2), R2(\u0026#34;2\u0026#34;, 2.5F), R3(\u0026#34;3\u0026#34;, 3), R4(\u0026#34;4\u0026#34;, 3.5F), R20(\u0026#34;20\u0026#34;, 20), R21(\u0026#34;21\u0026#34;, 21), R22(\u0026#34;22\u0026#34;, 22), R23(\u0026#34;23\u0026#34;, 23), R24(\u0026#34;24\u0026#34;, 24), R25(\u0026#34;25\u0026#34;, 25), R26(\u0026#34;26\u0026#34;, 26), R27(\u0026#34;27\u0026#34;, 27), R28(\u0026#34;28\u0026#34;, 28), R29(\u0026#34;29\u0026#34;, 29), R30(\u0026#34;30\u0026#34;, 30); private String key; private float value; RATIO(String key, float value) { this.key = key; this.value = value; } public float getValue() { return value; } } public enum EEC { LEVEL_L(\u0026#34;L\u0026#34;), LEVEL_M(\u0026#34;M\u0026#34;), LEVEL_Q(\u0026#34;Q\u0026#34;), LEVEL_H(\u0026#34;H\u0026#34;); private final String value; EEC(String value) { this.value = value; } public String getValue() { return this.value; } } /** * Êù°Á†Å * @param barcode Êù°Á†ÅÊåá‰ª§ * @param codeType Êù°Á†ÅÁ±ªÂûã * @param width Êù°Á†ÅÂÆΩÂ∫¶ * @param ratio ÂÆΩÈ´òÊØî‰æã * @param height Êù°Á†ÅÈ´òÂ∫¶ * @param x Êù°Á†ÅXÊñπÂêë * @param y Êù°Á†ÅYÊñπÂêë * @param data Êù°Á†ÅÊï∞ÊçÆ */ public void barcode(BARCODE barcode, CODE_TYPE codeType, int width, RATIO ratio, int height, int x, int y, String data) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(barcode.command).add(codeType.type).add(String.valueOf(width)).add(ratio.key).add(String.valueOf(height)) .add(String.valueOf(x)).add(String.valueOf(y)).add(data); this.addStrToCommand(sj.toString()); } /** * Êù°Á†ÅÂ∫ïÈÉ®ÊñáÊú¨ * @param font Â≠ó‰Ωì * @param size Â§ßÂ∞è * @param offset ÊñáÊú¨Ë∑ùÁ¶ªÊù°Á†ÅÁöÑÂçï‰ΩçÂÅèÁßªÈáè */ public void barcodeText(FONT font, int size, int offset) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;BT\u0026#34;).add(font.value).add(String.valueOf(size)).add(String.valueOf(offset)); this.addStrToCommand(sj.toString()); } /** * ÂÖ≥Èó≠Êù°Á†ÅÂ∫ïÈÉ®ÊñáÊú¨ */ public void barcodeTextOff() { this.addStrToCommand(\u0026#34;BT OFF\\r\\n\u0026#34;); } /** * ‰∫åÁª¥Á†Å * @param barcode Êù°Á†ÅÊåá‰ª§ÊñπÂêë * @param x x * @param y y * @param mm QR Code ËßÑËåÉÁºñÂè∑,1 Êàñ 2ÔºåÊé®Ëçê‰∏∫ 2 * @param un Ê®°ÂùóÁöÑÂçï‰ΩçÂÆΩÂ∫¶/Âçï‰ΩçÈ´òÂ∫¶ 1-32ÔºåÈªòËÆ§‰∏∫ 6 * @param eec Á∫†ÈîôÁ≠âÁ∫ß H - ÊûÅÈ´òÂèØÈù†ÊÄßÁ∫ßÂà´ÔºàH Á∫ßÔºâ Q - È´òÂèØÈù†ÊÄßÁ∫ßÂà´ÔºàQ Á∫ßÔºâ M - Ê†áÂáÜÁ∫ßÂà´ÔºàM Á∫ßÔºâ L - È´òÂØÜÂ∫¶Á∫ßÂà´ÔºàL Á∫ßÔºâ * @param data ÊâìÂç∞Êï∞ÊçÆ */ public void qrCode(BARCODE barcode, int x, int y, int mm, int un, EEC eec, String data) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(barcode.command).add(\u0026#34;QR\u0026#34;).add(String.valueOf(x)).add(String.valueOf(y)) .add(\u0026#34;M\u0026#34;).add(String.valueOf(mm)).add(\u0026#34;U\u0026#34;).add(String.valueOf(un)); addStrToCommand(sj.toString()); // ‰∫åÁª¥Á†ÅÊï∞ÊçÆ addStrToCommand(eec.value + \u0026#34;A,\u0026#34; + data + \u0026#34;\\r\\n\u0026#34;); // ÁªìÊùü‰∫åÁª¥Á†Å addStrToCommand(\u0026#34;ENDQR\\r\\n\u0026#34;); } /** * Áî®Êà∑ÂèØ‰ª•‰ΩøÁî® BOX ÂëΩ‰ª§ÁîüÊàêÂÖ∑ÊúâÊåáÂÆöÁ∫øÊù°ÂÆΩÂ∫¶ÁöÑÁü©ÂΩ¢„ÄÇ * @param x0 Â∑¶‰∏äËßíÁöÑ X ÂùêÊ†á * @param y0 Â∑¶‰∏äËßíÁöÑ Y ÂùêÊ†á * @param x1 Âè≥‰∏ãËßíÁöÑ X ÂùêÊ†á * @param y1 Âè≥‰∏ãËßíÁöÑ Y ÂùêÊ†á * @param width ÂΩ¢ÊàêÁü©ÂΩ¢Ê°ÜÁöÑÁ∫øÊù°ÁöÑÂçï‰ΩçÂÆΩÂ∫¶ 1 */ public void box(float x0, float y0, float x1, float y1, float width) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;BOX\u0026#34;).add(String.valueOf(x0)).add(String.valueOf(y0)). add(String.valueOf(x1)).add(String.valueOf(y1)).add(String.valueOf(width)); addStrToCommand(sj.toString()); } /** * ‰ΩøÁî® LINE ÂëΩ‰ª§ÂèØ‰ª•ÁªòÂà∂‰ªª‰ΩïÈïøÂ∫¶„ÄÅÂÆΩÂ∫¶ÂíåËßíÂ∫¶ÊñπÂêëÁöÑÁ∫øÊù°„ÄÇ * @param x0 Â∑¶‰∏äËßíÁöÑ X ÂùêÊ†á * @param y0 Â∑¶‰∏äËßíÁöÑ Y ÂùêÊ†á * @param x1 Âè≥‰∏ãËßíÁöÑ X ÂùêÊ†á * @param y1 Âè≥‰∏ãËßíÁöÑ Y ÂùêÊ†á * @param width ÂΩ¢ÊàêÁü©ÂΩ¢Ê°ÜÁöÑÁ∫øÊù°ÁöÑÂçï‰ΩçÂÆΩÂ∫¶ 1 */ public void line(int x0, int y0, int x1, int y1, int width) { StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;L\u0026#34;).add(String.valueOf(x0)).add(String.valueOf(y0)). add(String.valueOf(x1)).add(String.valueOf(y1)).add(String.valueOf(width)); addStrToCommand(sj.toString()); } /** * ÁîüÊàêÂõæÁâá * @param x0 x * @param y0 y * @param width ÂõæÁâáÂÆΩÂ∫¶ * @param height ÂõæÁâáÈ´òÂ∫¶ * @param bmp bmp Êï∞ÊçÆ */ public void graphics(int x0, int y0, int width, int height, BufferedImage bmp) { if (bmp != null) { //ÁîüÊàê2ËøõÂà∂Â≠óÁ¨¶‰∏≤ int[] rgb = new int[3]; width = bmp.getWidth(); height = bmp.getHeight(); int wModByte = (width % 8) == 0 ? 0 : 8 - (width % 8); int pixelCount = (width + wModByte) * height; int wPrintByte = (width + wModByte) / 8; StringBuilder res = new StringBuilder(); for (int y = 0; y \u0026lt; height; y++) { for (int x = 0; x \u0026lt; width; x++) { int pixel = bmp.getRGB(x, y); // ‰∏ãÈù¢‰∏âË°å‰ª£Á†ÅÂ∞Ü‰∏Ä‰∏™Êï∞Â≠óËΩ¨Êç¢‰∏∫RGBÊï∞Â≠ó rgb[0] = (pixel \u0026amp; 0xff0000) \u0026gt;\u0026gt; 16; rgb[1] = (pixel \u0026amp; 0xff00) \u0026gt;\u0026gt; 8; rgb[2] = (pixel \u0026amp; 0xff); String bitStr = (rgb[0] + rgb[1] + rgb[2]) / 3 \u0026gt;= 200 ? \u0026#34;1\u0026#34; : \u0026#34;0\u0026#34;; res.append(bitStr); } for (int k = 0; k \u0026lt; wModByte; k++) { res.append(\u0026#34;1\u0026#34;); } } //ÁîüÊàê‰∫åÂÄºÂõæÂ≠óËäÇÊµÅ String binary2 = res.toString(); StringBuilder hexStr = new StringBuilder(); for (int i = 0; i \u0026lt; binary2.length(); i = i + 8) { String substring = binary2.substring(i, i + 8); String hex = Long.toHexString(Long.parseLong(substring,2)); if(hex.length() == 1) { hex = \u0026#34;0\u0026#34; + hex; } else if(hex.length() \u0026gt; 2) { hex = hex.substring(hex.length() - 2); } hexStr.append(hex); } StringJoiner sj = new StringJoiner(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\\r\\n\u0026#34;); sj.add(\u0026#34;EG\u0026#34;).add(String.valueOf(wPrintByte)).add(String.valueOf(height)) .add(String.valueOf(x0)).add(String.valueOf(y0)).add(hexStr.toString()); addStrToCommand(sj.toString()); } } private String toHexString(byte[] bytes) { StringBuilder sb = new StringBuilder(); for(Byte b : bytes) { String hex = Integer.toHexString(b.intValue()).toUpperCase(); if(hex.length() == 1) { hex = \u0026#34;0\u0026#34; + hex; } else if(hex.length() \u0026gt; 2) { hex = hex.substring(hex.length() - 2); } sb.append(hex); } return sb.toString(); } } Ê®°ÊùøËß£ÊûêÂ§ÑÁêÜ\r#\rÊ†áÁ≠æ\npublic enum TAG { LAYOUT(\u0026#34;layout\u0026#34;), HEADER(\u0026#34;header\u0026#34;), FOOTER(\u0026#34;footer\u0026#34;), TEXT(\u0026#34;text\u0026#34;), IMAGE(\u0026#34;image\u0026#34;), BARCODE(\u0026#34;barcode\u0026#34;), LINE(\u0026#34;line\u0026#34;), BOX(\u0026#34;box\u0026#34;); private final String value; TAG(String value) { this.value = value; } public String getValue() { return this.value; } } Â±ûÊÄß\npublic enum ATTR { COMMAND(\u0026#34;command\u0026#34;), SRC(\u0026#34;src\u0026#34;), FONT_SIZE(\u0026#34;fontSize\u0026#34;), FONT_WEIGHT(\u0026#34;fontWeight\u0026#34;), WIDTH(\u0026#34;width\u0026#34;), HEIGHT(\u0026#34;height\u0026#34;), TYPE(\u0026#34;type\u0026#34;), /** ÂÆö‰πâ‰∏§Âº†Âç∑Ê†áÁ∫∏Èó¥ÁöÑÂûÇÁõ¥Èó¥Ë∑ùË∑ùÁ¶ª */ GAP(\u0026#34;gap\u0026#34;), /** BARCODE: 0 Ë°®Á§∫‰∫∫Áúº‰∏çÂèØËØÜÔºå1 Ë°®Á§∫‰∫∫ÁúºÂèØËØÜ */ /** BARCODE: ‰∏ÄÁª¥Êù°Á†ÅÁßçÁ±ª */ CODE_TYPE(\u0026#34;codeType\u0026#34;), /** BOX: ÊñπÊ°ÜÂ∑¶‰∏äËßí X ÂùêÊ†áÔºåÂçï‰Ωç dot */ START_X(\u0026#34;startX\u0026#34;), /** BOX: ÊñπÊ°ÜÂ∑¶‰∏äËßí Y ÂùêÊ†áÔºåÂçï‰Ωç dot */ START_Y(\u0026#34;startY\u0026#34;), /** BOX: ÊñπÊ°ÜÂè≥‰∏ãËßí X ÂùêÊ†áÔºåÂçï‰Ωç dot */ END_X(\u0026#34;endX\u0026#34;), /** BOX: ÊñπÊ°ÜÂè≥‰∏ãËßí Y ÂùêÊ†áÔºåÂçï‰Ωç dot */ END_Y(\u0026#34;endY\u0026#34;), /** BOX: ÊñπÊ°ÜÁ∫øÂÆΩÔºåÂçï‰Ωç dot */ /** TEXT: Â≠ó‰ΩìÂêçÁß∞ */ FONT(\u0026#34;font\u0026#34;), /** TEXT: X ÊñπÂêëÊîæÂ§ßÂÄçÁéá 1-10*/ X_MULTIPLICATION(\u0026#34;xMultiplication\u0026#34;), /** TEXT: Y ÊñπÂêëÊîæÂ§ßÂÄçÁéá 1-10*/ Y_MULTIPLICATION(\u0026#34;yMultiplication\u0026#34;), /** ÊâìÂç∞‰ªΩÊï∞ */ COPIES(\u0026#34;copies\u0026#34;), LEFT(\u0026#34;left\u0026#34;), TOP(\u0026#34;top\u0026#34;), VALUE(\u0026#34;value\u0026#34;), ; private final String value; ATTR(String value) { this.value = value; } public String getValue() { return this.value; } } ÊâìÂç∞Êåá‰ª§Á±ªÂûã\npublic abstract class Printer\u0026lt;T\u0026gt; { /** Ëß£ÊûêÊ®°Êùø */ public abstract byte[] wrapTemplate(Element element); public abstract T printText(Element element); /** ÊâìÂç∞Êù°ÂΩ¢Á†Å */ public abstract T printBarcode(Element element); /** ÊâìÂç∞ÂõæÁâá */ public abstract T printImage(Element element); /** ÊâìÂç∞Á∫øÊù° */ public abstract T printLine(Element element); } public class CpclPrinter extends Printer\u0026lt;CpclCommand\u0026gt; { private final static Logger logger = LoggerFactory.getLogger(CpclPrinter.class); @Override public byte[] wrapTemplate(Element element) { if(element == null) { return null; } CpclCommand cpclCommand = new CpclCommand(); // Êåá‰ª§È¢ÑÂ§ÑÁêÜ this.preHandle(cpclCommand, element); int totalHeight = getIntValue(element.attributeValue(ATTR.HEIGHT.getValue()), 0); handlerNode(element, cpclCommand, totalHeight); // Ê®°ÁâàËß£ÊûêÂêéÊåá‰ª§Â§ÑÁêÜ this.afterHandle(cpclCommand); Vector\u0026lt;Byte\u0026gt; command = cpclCommand.getCommand(); return ArrayUtils.toPrimitive(command.toArray(new Byte[command.size()])); } private void handlerNode(Element element, CpclCommand cpclCommand, int totalHeight) { TAG parentElemEnum = EnumUtils.getEnum(TAG.class, element.getName().toUpperCase()); Iterator iterator = element.elementIterator(); while (iterator.hasNext()) { Element elem = (Element) iterator.next(); String elemName = elem.getName(); TAG elemEnum = EnumUtils.getEnum(TAG.class, elemName.toUpperCase()); if ((TAG.HEADER.equals(parentElemEnum) || TAG.FOOTER.equals(parentElemEnum)) \u0026amp;\u0026amp; TAG.LAYOUT.equals(elemEnum)) { // ÊääÈ´òÂ∫¶Ê∑ªÂä†‰∏ã‰∏ãÈù¢layout‰∏≠ int parentHeight = getIntValue(element.attributeValue(ATTR.HEIGHT.getValue()), 0); elem.addAttribute(\u0026#34;top\u0026#34;, String.valueOf((totalHeight - parentHeight) / 8)); } if (TAG.LAYOUT.equals(parentElemEnum) \u0026amp;\u0026amp; TAG.LAYOUT.equals(elemEnum)) { // ÊääÈ´òÂ∫¶Ê∑ªÂä†‰∏ã‰∏ãÈù¢layout‰∏≠ int parentHeight = getIntValue(element.attributeValue(ATTR.HEIGHT.getValue()), 0); int parentTop = getIntValue(element.attributeValue(ATTR.TOP.getValue()), 0); int height = getIntValue(elem.attributeValue(ATTR.HEIGHT.getValue()), 0); int top = getIntValue(elem.attributeValue(ATTR.TOP.getValue()), 0); elem.addAttribute(\u0026#34;height\u0026#34;, String.valueOf((parentHeight + height) / 8)); elem.addAttribute(\u0026#34;top\u0026#34;, String.valueOf((parentTop + top) / 8)); } if (TAG.HEADER.equals(elemEnum) || TAG.FOOTER.equals(elemEnum) || TAG.LAYOUT.equals(elemEnum)) { handlerNode(elem, cpclCommand, totalHeight); } else { handlerTag(cpclCommand, elem); } } } private void handlerTag(CpclCommand cpclCommand, Element elem) { String elemName = elem.getName(); TAG elemEnum = EnumUtils.getEnum(TAG.class, elemName.toUpperCase()); if(elemEnum == null) { return; } switch (elemEnum) { case TEXT: cpclCommand.addCommand(printText(elem)); break; case IMAGE: cpclCommand.addCommand(printImage(elem)); break; case BARCODE: cpclCommand.addCommand(printBarcode(elem)); break; case LINE: cpclCommand.addCommand(printLine(elem)); break; case BOX: cpclCommand.addCommand(printBox(elem)); break; default: break; } } private void preHandle(CpclCommand cpclCommand, Element element) { int width = getIntValue(element.attributeValue(ATTR.WIDTH.getValue()), 0); int height = getIntValue(element.attributeValue(ATTR.HEIGHT.getValue()), 0); int copies = getIntValue(element.attributeValue(ATTR.COPIES.getValue()), 1); cpclCommand.init(width, height, copies); } private void afterHandle(CpclCommand cpclCommand) { cpclCommand.print(); } public CpclCommand printText(Element element) { Element parent = element.getParent(); String style = element.attributeValue(\u0026#34;style\u0026#34;); String[] split = style.split(\u0026#34;;\u0026#34;); CpclCommand cpclCommand = new CpclCommand(); CpclCommand.TEXT textCommand = getValue(EnumUtils.getEnum(CpclCommand.TEXT.class, element.attributeValue(ATTR.COMMAND.getValue())), CpclCommand.TEXT.TEXT); int x = getIntValue(parent.attributeValue(ATTR.LEFT.getValue()), 0); int y = getIntValue(parent.attributeValue(ATTR.TOP.getValue()), 0); String data = element.getText().trim(); int size = getIntValue(element.attributeValue(ATTR.FONT_SIZE.getValue()), 0); int gap = getIntValue(element.attributeValue(ATTR.GAP.getValue()), 0); int width = getIntValue(parent.attributeValue(ATTR.WIDTH.getValue()), 0); int height = getIntValue(parent.attributeValue(ATTR.HEIGHT.getValue()), 0); int blod = getIntValue(element.attributeValue(ATTR.FONT_WEIGHT.getValue()), 0); // ÊîæÂ§ß int xMultiplication = getIntValue(element.attributeValue(ATTR.X_MULTIPLICATION.getValue()), 1); int yMultiplication = getIntValue(element.attributeValue(ATTR.Y_MULTIPLICATION.getValue()), 1); CpclCommand.FONT font = getValue(EnumUtils.getEnum(CpclCommand.FONT.class, element.attributeValue(ATTR.FONT.getValue())), CpclCommand.FONT.F24); boolean isCenter = false; for (int i = 0; i \u0026lt; split.length; i++) { String[] split1 = split[i].split(\u0026#34;:\u0026#34;); String key = split1[0]; String value = split1[1]; // Â≠ó‰ΩìÂä†Á≤ó if (key.contains(\u0026#34;fontWeight\u0026#34;)) { if (\u0026#34;bold\u0026#34;.equals(value)) { blod = 1; } } // Â≠ó‰ΩìÂ§ßÂ∞è else if (key.contains(\u0026#34;fontSize\u0026#34;)) { if (\u0026#34;auto\u0026#34;.equals(value)) { int nextY = cpclCommand.calcSimulateBlockNextY(textCommand, font, size, x, y, data, width, 2, 2, gap); if (nextY \u0026gt; y + height) { xMultiplication = 1; yMultiplication = 1; } else { xMultiplication = 2; yMultiplication = 2; } } else if (Integer.parseInt(value) \u0026gt; 14) { xMultiplication = 2; yMultiplication = 2; } else if (Integer.parseInt(value) \u0026lt;= 6) { font = CpclCommand.FONT.F55; } else { xMultiplication = 1; yMultiplication = 1; } } // Â±Ö‰∏≠ else if (key.contains(\u0026#34;align\u0026#34;)) { if (\u0026#34;center\u0026#34;.equals(value)) { isCenter = true; } } } // Âä†Á≤ó if (blod == 1) { cpclCommand.setBlod(true); } // ÊîæÂ§ß if (xMultiplication \u0026gt; 1 \u0026amp;\u0026amp; yMultiplication \u0026gt; 1) { cpclCommand.setMag(xMultiplication, yMultiplication); } cpclCommand.addSimulateBlock(textCommand, font, size, x, y, data, width, xMultiplication, yMultiplication, gap, isCenter); // ÈáçÁΩÆÂ≠ó‰ΩìÊ†∑Âºè if (xMultiplication \u0026gt; 1 \u0026amp;\u0026amp; yMultiplication \u0026gt; 1) { cpclCommand.setMag(1, 1); } if (blod == 1) { cpclCommand.setBlod(false); } return cpclCommand; } @Override public CpclCommand printBarcode(Element element) { Element parent = element.getParent(); CpclCommand cpclCommand = new CpclCommand(); CpclCommand.BARCODE barcode = getValue(EnumUtils.getEnum(CpclCommand.BARCODE.class, element.attributeValue(ATTR.COMMAND.getValue())), CpclCommand.BARCODE.BARCODE); CpclCommand.CODE_TYPE codeType = getValue(EnumUtils.getEnum(CpclCommand.CODE_TYPE.class, element.attributeValue(ATTR.CODE_TYPE.getValue())), CpclCommand.CODE_TYPE.CODE128); String type = getValue(element.attributeValue(ATTR.TYPE.getValue()), \u0026#34;\u0026#34;); int x = getIntValue(parent.attributeValue(ATTR.LEFT.getValue()), 0); int y = getIntValue(parent.attributeValue(ATTR.TOP.getValue()), 0); int width = getIntValue(parent.attributeValue(ATTR.WIDTH.getValue()), 0); int height = getIntValue(parent.attributeValue(ATTR.HEIGHT.getValue()), 0); CpclCommand.RATIO ratio = CpclCommand.RATIO.R2; String data = StringUtil.valueOf(element.getText()).trim(); if (StringUtil.isBlank(data)) { data = StringUtil.valueOf(element.attributeValue(ATTR.VALUE.getValue())).trim(); } if (StringUtil.isBlank(data)) { return cpclCommand; } if (\u0026#34;qrcode\u0026#34;.equals(type)) { cpclCommand.qrCode(barcode, x, y, 2, 3, CpclCommand.EEC.LEVEL_M, data); } else { int cellWidth = (int) Math.floor(width / (ratio.getValue() * data.length() * 6)); int posX = x + (int) ((width - ratio.getValue() * data.length() * 6 * cellWidth) * 0.3); cpclCommand.barcode(barcode, codeType, cellWidth, ratio, height, posX, y, data); } return cpclCommand; } @Override public CpclCommand printImage(Element element) { Element parent = element.getParent(); CpclCommand cpclCommand = new CpclCommand(); int x = getIntValue(parent.attributeValue(ATTR.LEFT.getValue()), 0); int y = getIntValue(parent.attributeValue(ATTR.TOP.getValue()), 0); int width = 0; int height = 0; String src = element.attributeValue(ATTR.SRC.getValue()); BufferedImage image = null; try { if(src.startsWith(\u0026#34;data:image/png;base64,\u0026#34;)) { byte[] bytes = Base64.getDecoder().decode(src.substring(\u0026#34;data:image/png;base64,\u0026#34;.length())); ByteArrayInputStream is = new ByteArrayInputStream(bytes); image = ImageIO.read(is); is.close(); } else { image = ImgUtils.getImageFromUrl(src); } if(image == null) { return cpclCommand; } // Êú™ËÆæÂÆöÂÆΩÂ∫¶ÂÄºÂàôÊ†πÊçÆÈ´òÂ∫¶ÂêåÊØî‰æãËøõË°åÂéãÁº© height = getIntValue(parent.attributeValue(ATTR.HEIGHT.getValue()), image.getHeight()); width = getIntValue(parent.attributeValue(ATTR.WIDTH.getValue()), image.getWidth()); // ÂéãÁº©ÂõæÁâáÂ§ßÂ∞è BufferedImage bitMap = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_BINARY); bitMap.getGraphics().drawImage(image, 0, 0, width, height, null); bitMap.getGraphics().dispose(); cpclCommand.graphics(x, y, width, height, bitMap); bitMap.flush(); image.flush(); } catch (MalformedURLException e) { logger.error(\u0026#34;ÂõæÁâáURLËß£ÊûêÂºÇÂ∏∏ÔºÅ\u0026#34;, e); } catch (IOException e) { logger.error(\u0026#34;ÂõæÁâáËØªÂèñÊàñ‰∏ãËΩΩÂºÇÂ∏∏ÔºÅ\u0026#34;, e); } finally { if (image != null) { image.getGraphics().dispose(); } } return cpclCommand; } @Override public CpclCommand printLine(Element element) { CpclCommand cpclCommand = new CpclCommand(); int x0 = getIntValue(element.attributeValue(ATTR.START_X.getValue()), 0); int y0 = getIntValue(element.attributeValue(ATTR.START_Y.getValue()), 0); int x1 = getIntValue(element.attributeValue(ATTR.END_X.getValue()), 0); int y1 = getIntValue(element.attributeValue(ATTR.END_Y.getValue()), 0); int width = getIntValue(element.attributeValue(ATTR.WIDTH.getValue()), 1); cpclCommand.line(x0, y0, x1, y1, width); return cpclCommand; } private int getIntValue(String str, int defaultValue) { return StringUtil.isNotBlank(str) ? (int)(Float.parseFloat(str) * 8) : defaultValue; } private \u0026lt;T\u0026gt; T getValue(T value, T defaultValue) { return value != null ? value : defaultValue; } private static BufferedImage getImageFromUrl(String url) throws IOException { BufferedImage bufferedImage = null; URL imgUrl = new URL(url); HttpURLConnection conn = (HttpURLConnection)imgUrl.openConnection(); conn.setConnectTimeout(5000); conn.setReadTimeout(5000); conn.connect(); if (HttpURLConnection.HTTP_OK == conn.getResponseCode()) { InputStream inputStream = conn.getInputStream(); bufferedImage = ImageIO.read(inputStream); } else { logger.error(\u0026#34;Ëé∑ÂèñÁΩëÁªúÂõæÁâáÂ§±Ë¥•,scr={}, code={}, msg={} \u0026#34;, url, conn.getResponseCode(), conn.getResponseMessage()); } conn.disconnect(); return bufferedImage; } /** * ÂêàÂπ∂Â≠óËäÇÊï∞ÁªÑ * @param bt1 * @param bt2 * @return */ public static byte[] byteMerger(byte[] bt1, byte[] bt2) { byte[] bt3 = new byte[bt1.length + bt2.length]; System.arraycopy(bt1, 0, bt3, 0, bt1.length); System.arraycopy(bt2, 0, bt3, bt1.length, bt2.length); return bt3; } } ÊµãËØï\r#\rSAXReader saxreader = new SAXReader(); Document dom = null; try { dom = saxreader.read(new ByteArrayInputStream(DemoConstnts.template_74.getBytes(\u0026#34;UTF-8\u0026#34;))); } catch (Exception e) { e.printStackTrace(); } Element rootEle = dom.getRootElement(); CpclPrinter cpclPrinter = new CpclPrinter(); byte[] cmd = cpclPrinter.wrapTemplate(rootEle); System.out.println(new String(cmd, \u0026#34;GB18030\u0026#34;)); ÂÖ∂‰ªñÈóÆÈ¢ò\r#\rjava Ë∞ÉÁî® js ÈóÆÈ¢ò\nÁî±‰∫éÊ®°ÊùøÂºïÊìéÊòØjsËØ≠Ë®ÄÔºåxmlËß£ÊûêÊàêCPCLÊåá‰ª§ÊòØ‰ΩøÁî®javaÂÜôÁöÑÔºåÊâÄ‰ª•ÈúÄË¶ÅÂú®javaÂ∫îÁî®‰∏≠Ë∞ÉÁî®ËøôÂ•ójsÈÄªËæë„ÄÇ\nÊ≥®ÊÑèÔºöËøôÈáå‰πüÂèØ‰ª•ÊääjavaËß£ÊûêCPCLÊîπÈÄ†ÊàêjsÁöÑÂÜôÊ≥ïÔºåËøôÊ†∑Â∞±Áõ¥Êé•Ëµ∑‰∏™nodejsÈ°πÁõÆÂ∞±ÂèØ‰ª•„ÄÇ\n‰∏äÈù¢javaË∞ÉÁî®jsÂèØËÉΩ‰ºöÊÄßËÉΩÈóÆÈ¢òÔºåËøòÊúâÂÖ∂‰ªñ‰∏çÂèØÈ¢Ñ‰º∞ÈóÆÈ¢òÔºåÊâÄ‰ª•ËøôÈáåÁöÑÊòØÂçïÁã¨Ëµ∑‰∏™Â∫îÁî®Ôºå‰∏çËÉΩÂõ†‰∏∫Ëøô‰∏™ÈóÆÈ¢òËÄåÂΩ±ÂìçÂà∞ÂÖ∂‰ªñÂäüËÉΩÁöÑÊ≠£Â∏∏ËøêË°å„ÄÇ\nË∞ÉÁî® node Â∫îÁî®\npublic class EjsRenderUtils { public static String ejsRender( String data) { ProcessBuilder processBuilder = new ProcessBuilder(); Random rand = new Random(); String tempFileName = System.currentTimeMillis() + \u0026#34;_\u0026#34; + rand.nextInt(1000); String dataTempFileName = \u0026#34;temp/\u0026#34; + tempFileName + \u0026#34;.json\u0026#34;; try { // Ê∏ÖÁêÜ‰∏ÄÂ∞èÊó∂ÂâçÁöÑ‰∏¥Êó∂Êñá‰ª∂ File tempDir = new File(\u0026#34;temp/\u0026#34;); if (!tempDir.exists()) { tempDir.mkdirs(); } long oneHourAgo = System.currentTimeMillis() - (1000 * 60 * 60); if (tempDir.listFiles() != null) { for (File file : tempDir.listFiles()) { if (file.lastModified() \u0026lt; oneHourAgo) { // Delete the file if it\u0026#39;s older than one hour file.delete(); } } } // Â∞ÜÂèÇÊï∞ÂÜôÂÖ•‰∏¥Êó∂Êñá‰ª∂ File dataTempFile = new File(dataTempFileName); Files.write(dataTempFile.toPath(), data.getBytes(), StandardOpenOption.CREATE); } catch(IOException e) { e.printStackTrace(); } processBuilder.command(\u0026#34;node\u0026#34;, \u0026#34;script/ejsRender.js\u0026#34;, tempFileName); StringBuilder output = new StringBuilder(); try { Process process = processBuilder.start(); BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream())); String line; while ((line = reader.readLine()) != null) { output.append(line).append(\u0026#34;\\n\u0026#34;); } int exitCode = process.waitFor(); System.out.println(\u0026#34;\\nExited with error code : \u0026#34; + exitCode); } catch (IOException e) { e.printStackTrace(); } catch (InterruptedException e) { e.printStackTrace(); } // Return the output from the script return output.toString().trim(); } } ÊúÄÂêéÊï¥ÂêàËµ∑Êù•Â∞±ÊòØ\n// Ëé∑ÂèñÊ®°ÊùøÂÜÖÂÆπ String xmlTemplate = EjsRenderUtils.ejsRender(...); // ÊääxmlÊ®°ÊùøËΩ¨Êç¢Êàêdocument Document templateDom = null; try { SAXReader saxreader = new SAXReader(); templateDom = saxreader.read(new ByteArrayInputStream(xmlTemplate.getBytes(StandardCharsets.UTF_8))); } catch (Exception e) { logger.error(\u0026#34;SAXReader.readËΩ¨Êç¢ÈîôËØØ, {}\u0026#34;, e.getMessage()); logger.error(\u0026#34;xmlËß£ÊûêÂêéÁöÑÁªìÊûú: {}\u0026#34;, xmlTemplate); } // Ëß£ÊûêÊåá‰ª§ Element rootEle = templateDom.getRootElement(); CpclPrinter cpclPrinter = new CpclPrinter(); byte[] cmd = cpclPrinter.wrapTemplate(rootEle); Êï¥‰ΩìÂÜÖÂÆπÁªìÊùüÔºÅ\n"},{"id":12,"href":"/posts/%E4%BD%BF%E7%94%A8playwright%E6%88%AA%E5%9B%BE%E9%A9%BE%E7%85%A7%E9%A2%98%E7%9B%AE/","title":"‰ΩøÁî®playwrightÊà™ÂõæÈ©æÁÖßÈ¢òÁõÆ","section":"ÊàëÁöÑÂçöÂÆ¢","content":"\rÁõÆÁöÑ\r#\rÁõÆÂâçÁßëÁõÆ‰∏ÄÁöÑÈ¢òÁõÆÂè™ÊúâÂú®Á∫øÁâàÊú¨ÔºåÂØπ‰∫éÈÇ£‰∫õÈúÄË¶ÅÂØºÂá∫pdfÁâàÔºåÊâìÂç∞Âá∫Êù•ÁªÉ‰π†ÁöÑÔºåÊ≤°ÊúâÂäûÊ≥ïÂèØ‰ª•Áõ¥Êé•ÂØºÂá∫pdfÔºåÂõ†Ê≠§ÈúÄË¶ÅÊà™Âõæ ÁßëÁõÆ‰∏ÄÈ¢òÁõÆÔºåÊï¥ÁêÜÊàêpdfÔºå‰ª•‰æõÊâìÂç∞„ÄÇ\nËøôÈáåÂÄüÂä©PlaywrightÂ∑•ÂÖ∑ÔºåÊà™ÂõæÂá∫È¢òÁõÆÔºåÁÑ∂ÂêéÂÜçÊï¥ÁêÜÊàêpdf„ÄÇ\nPlaywright‰ªãÁªç\r#\rPlaywrightÊòØ‰∏Ä‰∏™Âº∫Â§ßÁöÑPythonÂ∫ìÔºå‰ªÖÁî®‰∏Ä‰∏™APIÂç≥ÂèØËá™Âä®ÊâßË°åChromium„ÄÅFirefox„ÄÅWebKitÁ≠â‰∏ªÊµÅÊµèËßàÂô®Ëá™Âä®ÂåñÊìç‰ΩúÔºåÂπ∂ÂêåÊó∂ÊîØÊåÅ‰ª•Êó†Â§¥Ê®°Âºè„ÄÅÊúâÂ§¥Ê®°ÂºèËøêË°å„ÄÇ\nPlaywright‰πüÊòØ‰∏ÄÊ¨æWebÁ´ØÂà∞Á´ØÊµãËØïÂ∑•ÂÖ∑ÔºåÂèØ‰ª•ÂÅöËá™Âä®ÂåñÊµãËØï„ÄÇ\nPlaywright ÂÆâË£Ö\r#\rpip3 install playwright ÂÆâË£Ö‰∏ªÊµÅÁöÑÊµèËßàÂô®È©±Âä®\r#\rplaywright install Ê≥®ÊÑèÔºöÂÆâË£ÖËøáÁ®ãÈúÄË¶ÅÊó∂Èó¥ÔºåÊÖ¢ÊÖ¢Á≠âÂêßÔΩûÔΩû\nÊ≠•È™§\r#\r1„ÄÅËßÇÂØüÈ°µÈù¢ÂÖÉÁ¥†ÔºåÂ¶Ç‰ΩïÂèØ‰ª•Êà™Âá∫‰∏ÄÂº†ÂåÖÂê´ËØ¶ÁªÜ‰ø°ÊÅØÁöÑÂõæÁâá„ÄÇ\n2„ÄÅÊü•ÊâæÊà™ÂõæÁöÑËåÉÂõ¥ÔºåËææÂà∞ÂÆåÁæéËæπÁïå„ÄÇ\n3„ÄÅËøõË°å‰∏ã‰∏ÄÈ°µËá™Âä®ÂåñÂ§ÑÁêÜ„ÄÇ\nÊ≤°ÊúâËØ¶ÁªÜÊ≠•È™§ÔºåÁúã‰ª£Á†ÅÂêßÔΩûÔΩû\nÊï¥‰Ωì‰ª£Á†Å\r#\r1„ÄÅÊääÂÖ®ÈÉ®È¢òÁõÆÂíåËØ¶Ëß£Êà™Âõæ‰∏ãÊù•\nimport os.path from playwright.sync_api import sync_playwright # ÂõæÁâá‰øùÂ≠òË∑ØÂæÑ path = \u0026#39;/Users/yuanmoc/Documents/py-workspace/test/timu\u0026#39; def run(playwright): # ‰ΩøÁî®chromeÊ®°ÊãüÊµèËßàÂô® browser = playwright.chromium.launch(headless=False) # Á™ó‰ΩìÂ§ßÂ∞èÔºåËøòÂèØ‰ª•ËÆæÁΩÆÂ§¥‰ø°ÊÅØÁ≠â #context = browser.new_context(viewport = {\u0026#39;width\u0026#39;: 375, \u0026#39;height\u0026#39;: 812}) context = browser.new_context() # Êñ∞Âª∫page page = context.new_page() # ÊâìÂºÄÈ°µÈù¢ page.goto(\u0026#34;https://www.jiakaobaodian.com/mnks/exercise/0-car-kemu1-guangzhou.html?id=800500\u0026#34;) # ÈÄâÊã©ÂÖÉÁ¥†ÔºåÁÇπÂáªÁ¶ÅÊ≠¢Ëá™Âä®Ë∑≥ËΩ¨‰∏ã‰∏ÄÈ°µÔºàÂõ†‰∏∫ËøôÈáåÈúÄË¶ÅÊà™ÂõæÂÖàÔºâ page.wait_for_selector(\u0026#34;input.checkbox-next\u0026#34;).click() # ÈÄâÊã©ÂÖÉÁ¥†ÔºåÁÇπÂáªÊòæÁ§∫ËØ¶Ëß£ page.wait_for_selector(\u0026#34;text=\u0026#39;ÊòæÁ§∫ËØ¶Ëß£\u0026#39;\u0026#34;).click() # Â§ÑÁêÜÁ¨¨‰∏ÄÈ°µ handlerPage(page, 1) for i in range(2, 2285): # ÁÇπÂáªÂà∞‰∏ã‰∏ÄÈ°µ page.wait_for_selector(\u0026#34;text=\u0026#39;‰∏ã‰∏ÄÈ¢ò\u0026#39;\u0026#34;).click() # Â§ÑÁêÜ‰∏ã‰∏ÄÈ°µ printPage(page, i) # ÂÖ≥Èó≠ËµÑÊ∫ê page.close() context.close() browser.close() def handlerPage(page, num): # ÈÄâÊã©Á≠îÊ°àÔºåËÆ©ÂÖ∂ÊòæÁ§∫Âá∫Ê≠£Á°ÆÁ≠îÊ°àÔºå‰ª•‰æõÊü•Áúã page.click(\u0026#34;[ref=\\\u0026#34;answerclick\\\u0026#34;]:last-child\u0026#34;) # ËøôÈáåÈúÄË¶ÅÂÖàÁ≠âÂæÖ‰∏Ä‰∫õÊó∂Èó¥ÔºåËÆ©È°µÈù¢Ê∏≤ÊüìÂÆåÊàêÔºå‰∏çÁÑ∂‰∏ãÈù¢ÁöÑÂÖÉÁ¥†Êó†Ê≥ïËøõË°åÂÆö‰Ωç‰∏éappendChild page.wait_for_timeout(300) # ÈÄâÊã©È¢òÁõÆÂÖÉÁ¥† detail = page.wait_for_selector(\u0026#39;#ComQuestionDetail_qundefined\u0026#39;).as_element() # ÈÄâÊã©ËØ¶Ëß£ÂÖÉÁ¥† xiangjie = page.wait_for_selector(\u0026#39;.xiangjie \u0026gt;\u0026gt; .content\u0026#39;).as_element() # ÊääËØ¶Ëß£ÊèíÂÖ•Âà∞È¢òÁõÆÁ≠îÊ°àÂêéÈù¢ page.evaluate(\u0026#39;\u0026#39;\u0026#39;([detail, xiangjie]) =\u0026gt; { detail.appendChild(document.createElement(\u0026#34;br\u0026#34;)); detail.appendChild(xiangjie); }\u0026#39;\u0026#39;\u0026#39;, [detail, xiangjie]) # ÂàõÂª∫‰øùÂ≠òÂõæÁâáÁöÑÁõÆÂΩï if not os.path.exists(path): os.mkdir(path) # ÈÄâÊã©ÂÖÉÁ¥†ËåÉÂõ¥ÔºåÂπ∂Êà™ÂõæÔºå‰øùÂ≠ò page.locator(\u0026#34;div.com-mnks-question-detail\u0026#34;).screenshot(path=path + \u0026#34;/\u0026#34;+str(num)+\u0026#34;.png\u0026#34;) if __name__ == \u0026#39;__main__\u0026#39;: with sync_playwright() as playwright: run(playwright) 2„ÄÅÊääÂõæÁâáÊãºÊé•ÊàêA4Á∫∏Â∑Æ‰∏çÂ§öÂ§ßÂ∞èÔºåÊñπ‰æøÊâìÂç∞\nÈúÄË¶ÅÂÆâË£Ö pip3 install Pillow\nfrom PIL import Image import os input_folder = \u0026#39;/Users/yuanmoc/Documents/py-workspace/test/timu/\u0026#39; output_folder = \u0026#39;/Users/yuanmoc/Documents/py-workspace/test/timu1/\u0026#39; if __name__ == \u0026#39;__main__\u0026#39;: if not os.path.exists(output_folder): os.mkdir(output_folder) # 14Âº†ÂõæÁâáÊãºÊàê‰∏ÄÈ°µ for i in range(1, 2284, 14): # ‰∏ÄÂº†ÂõæÁâáÂ§ßÂ∞èÊòØ 860 x 335 # ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÔºà860 * 2 + 2Ôºâ x Ôºà335 * 7ÔºâÂÉèÁ¥†Â§ßÂ∞èÁöÑÁôΩËâ≤ËÉåÊôØÂõæÂÉè new_image = Image.new(\u0026#39;RGB\u0026#39;, (860 * 2 + 2, 335 * 7), \u0026#39;white\u0026#39;) # Â∞ÜÂõõ‰∏™ÂõæÂÉèÁ≤òË¥¥Âà∞Êñ∞ÂõæÂÉèÁöÑÊ≠£Á°Æ‰ΩçÁΩÆ new_image.paste(Image.open(input_folder+str(i)+\u0026#39;.png\u0026#39;), (0, 0)) new_image.paste(Image.open(input_folder+str(i+1)+\u0026#39;.png\u0026#39;), (862, 0)) new_image.paste(Image.open(input_folder + str(i + 2) + \u0026#39;.png\u0026#39;), (0, 335)) new_image.paste(Image.open(input_folder + str(i + 3) + \u0026#39;.png\u0026#39;), (862, 335)) new_image.paste(Image.open(input_folder + str(i + 4) + \u0026#39;.png\u0026#39;), (0, 335*2)) new_image.paste(Image.open(input_folder + str(i + 5) + \u0026#39;.png\u0026#39;), (862, 335*2)) new_image.paste(Image.open(input_folder + str(i + 6) + \u0026#39;.png\u0026#39;), (0, 335*3)) new_image.paste(Image.open(input_folder + str(i + 7) + \u0026#39;.png\u0026#39;), (862, 335*3)) new_image.paste(Image.open(input_folder + str(i + 8) + \u0026#39;.png\u0026#39;), (0, 335*4)) new_image.paste(Image.open(input_folder + str(i + 9) + \u0026#39;.png\u0026#39;), (862, 335*4)) new_image.paste(Image.open(input_folder + str(i + 10) + \u0026#39;.png\u0026#39;), (0, 335*5)) new_image.paste(Image.open(input_folder + str(i + 11) + \u0026#39;.png\u0026#39;), (862, 335*5)) new_image.paste(Image.open(input_folder + str(i + 12) + \u0026#39;.png\u0026#39;), (0, 335*6)) new_image.paste(Image.open(input_folder + str(i + 13) + \u0026#39;.png\u0026#39;), (862, 335*6)) new_image.save(output_folder + str(i)+\u0026#39;-\u0026#39;+str(i+13)+\u0026#39;.png\u0026#39;) "},{"id":13,"href":"/posts/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","title":"‰ΩøÁî®hugoÊê≠Âª∫ÂçöÂÆ¢","section":"ÊàëÁöÑÂçöÂÆ¢","content":"Âú® MAC M1 PRO ‰∏äÂÆâË£ÖhugoÂπ∂Êê≠Âª∫ÂçöÂÆ¢\nÂÆâË£Öhugo\r#\r(Â¶ÇÊûúÊòØÂÖ∂‰ªñÊú∫Âô®ÔºåËØ∑ÊåâÁÖßÂÆòÁΩëÂÆâË£ÖÊïôÁ®ã\rÁÇπÂáªÁõ¥ËææÂú∞ÂùÄ)\nbrew install hugo Êü•ÁúãÁâàÊú¨Âè∑\r#\rhugo version ÂàõÂª∫Á´ôÁÇπ\r#\rhugo new site myblog ÁõÆÂΩïÁªìÊûÑ\nhugo-book ‚îú‚îÄ‚îÄ archetypes ÂÜÖÂÆπÊ®°ÁâàÁõÆÂΩï ‚îÇ ‚îî‚îÄ‚îÄ default.md Ê®°ÁâàÊñá‰ª∂ ‚îú‚îÄ‚îÄ config.toml ÈÖçÁΩÆÊñá‰ª∂(‰πüÂèØ‰ª•ÊòØconfig.yaml) ‚îú‚îÄ‚îÄ content ÂÜÖÂÆπÁõÆÂΩï ‚îú‚îÄ‚îÄ data Êï∞ÊçÆÁõÆÂΩï ‚îú‚îÄ‚îÄ layouts ÁΩëÁ´ôÊ®°ÁâàÁõÆÂΩï ‚îú‚îÄ‚îÄ static ÈùôÊÄÅÊñá‰ª∂ÁõÆÂΩï ‚îî‚îÄ‚îÄ themes ‰∏ªÈ¢òÁõÆÂΩï Ê∑ªÂä†Ê®°Êùø\r#\rËøôÈáå‰ΩøÁî®ÁöÑÊòØhugo-bookÔºåÂèØ‰ª•Âú®ÂÆòÁΩëÊü•ÊâæÂêàÈÄÇÁöÑÊ®°Êùø\rÁÇπÂáªÁõ¥Ëææ\ngit clone https://github.com/alex-shpak/hugo-book.git themes/hugo-book ÊääÈªòËÆ§Ê®°ÊùøÁöÑÊ®°ÊùøÂÜÖÂÆπÂ§çÂà∂Âá∫Êù•Âπ∂ËøêË°åÊµãËØï\ncp themes/hugo-book/exampleSite/* ./ # Âà†Èô§ÂÖ∂‰ªñÂõΩÈôÖÂåñÂÜÖÂÆπÔºåÂ∞±Áïô‰∏Ä‰∏™‰∏≠Êñá rm -rf content content.bn content.ru content.zh mv content.en content # ÊµãËØïÊàêÂäüÂêéÔºåÂèØ‰ª•Êääcontent‰∏ãÈù¢ÁöÑÁõÆÂΩïÂà†Èô§ÔºåÂÜôËá™Â∑±ÁöÑÂÜÖÂÆπ ‰øÆÊîπÈÖçÁΩÆ\r#\rËøôÈáå‰ΩøÁî®‰∫Üconfig.yamlÈÖçÁΩÆÊñá‰ª∂ÔºåÂÖ∂‰ªñÁöÑÂà†Èô§,Â¶ÇÔºöconfig.toml\n# Â∞±‰ΩøÁî®‰∏≠ÊñáÔºåÊää languages ËøôÂùó‰øÆÊîπÊàê‰ª•‰∏ãÈÖçÁΩÆ defaultContentLanguage: \u0026#34;zh\u0026#34; languages: zh: languageName: Chinese contentDir: content weight: 1 # ÂèëÂ∏É‰ΩøÁî® github pages ÁöÑ /docs ÔºåÁîüÊàêÁöÑÈùôÊÄÅÊñá‰ª∂ÁõÆÂΩï‰øÆÊîπÊàê /docs # Ê∑ªÂä†‰ª•‰∏ãÈÖçÁΩÆ publishDir: docs # baseURL ‰øÆÊîπÊàê‰Ω†ÈÖçÁΩÆÁöÑÂú∞ÂùÄÔºåÂ¶ÇÊûúÊòØgithub pages Âàö‰øÆÊîπÊàê \u0026lt;github-name\u0026gt;.github.io # title ÁΩëÁ´ôÁöÑÊ†áÈ¢ò ËøêË°åhugo\r#\rhugo server ËÆøÈóÆ http://localhost:1313\nÂàõÂª∫ÊñáÁ´†\r#\rhugo new post/first.md Â§¥ÈÉ®ÊúâFront MatterÔºàÂâçÁΩÆÂÖÉÊï∞ÊçÆÔºâÂèÇÊï∞\n--- title: \u0026#34;‰ΩøÁî®hugoÊê≠Âª∫ÂçöÂÆ¢\u0026#34; weight: 1 draft: false # bookFlatSection: false # bookToc: true # bookHidden: false # bookCollapseSection: false # bookComments: false # bookSearchExclude: false --- titleÔºöÊåáÂÆöÈ°µÈù¢ÊàñÊñáÁ´†ÁöÑÊ†áÈ¢ò„ÄÇ\nweightÔºöÁî®‰∫éÊéßÂà∂È°µÈù¢ÊàñÊñáÁ´†ÁöÑÊéíÂ∫èÈ°∫Â∫è„ÄÇ\ndraftÔºöÊåáÂÆöÈ°µÈù¢ÊàñÊñáÁ´†ÊòØÂê¶‰∏∫ËçâÁ®øÁä∂ÊÄÅ„ÄÇ\nbookFlatSectionÔºöÊåáÁ§∫È°µÈù¢ÊòØÂê¶Â∫î‰∏∫ÊâÅÂπ≥ÁõÆÂΩïÁªìÊûÑ„ÄÇ\nbookTocÔºöÊåáÁ§∫ÊòØÂê¶Â∫îËá™Âä®ÁîüÊàêÈ°µÈù¢ÁöÑÁõÆÂΩïÁªìÊûÑ„ÄÇ\nbookHiddenÔºöÊåáÁ§∫È°µÈù¢ÊòØÂê¶Â∫îÂú®ÁõÆÂΩïÁªìÊûÑ‰∏≠ÈöêËóè„ÄÇ\nbookCollapseSectionÔºöÊåáÁ§∫ÁõÆÂΩïÁªìÊûÑ‰∏≠ÁöÑÈÉ®ÂàÜÊòØÂê¶ÊäòÂè†„ÄÇ\nbookCommentsÔºöÊåáÁ§∫È°µÈù¢ÊòØÂê¶ÂÖÅËÆ∏ËØÑËÆ∫„ÄÇ\nbookSearchExcludeÔºöÊåáÁ§∫È°µÈù¢ÊòØÂê¶Â∫îÊéíÈô§Âú®ÊêúÁ¥¢ÁªìÊûú‰πãÂ§ñ„ÄÇ\nÈÉ®ÁΩ≤\r#\rÂú®Github‰∏äÊñ∞Âª∫‰ªìÂ∫ì xxx.github.io\n‰∏ÄÂÆöÊòØ xxx.github.ioÔºåxxx ‰∏∫‰Ω†ÁöÑ Github Áî®Êà∑Âêç\nÁî® hugo ÁîüÊàêÁΩëÈ°µÔºåÊâòÁÆ°Âà∞ GitHub ‰ªìÂ∫ì\nhugo -D # ‰ºöÁºñËØëËçâÁ®øÂÜÖÂÆπ ÊàñËÄÖ hugo Â∞Ü myblog ÁõÆÂΩï push Âà∞ÂàöÂàõÂª∫‰ªìÂ∫ìÁöÑ main ÂàÜÊîØ\ngit init git add . git commit -m \u0026#34;message\u0026#34; git remote add origin https://github.com/xxx/xxx.github.io.git git push -u origin main Âú®‰Ω†‰ªìÂ∫ì xxx.github.io ‰∏ãÔºåSettings-\u0026gt;Pages-\u0026gt;Branch Êää/(root) ‰øÆÊîπÊàê /docs ‰øùÂ≠òÂç≥ÂèØ„ÄÇ\nÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ËÆøÈóÆ xxx.github.io ‰∫Ü„ÄÇ\nÂà∞Ê≠§ÈÉ®ÁΩ≤ÂÆåÊàê‚úÖ„ÄÇ\nÊ∑ªÂä†ËØÑËÆ∫ÂäüËÉΩ\r#\r‰ΩøÁî® https://utteranc.es/ Êù•ÂÅöËØÑËÆ∫ÂäüËÉΩ\n1„ÄÅÊâæÂà∞comments.htmlÊàñËÄÖÂú®ÊñáÁ´†ÂÜÖÂÆπ‰∏ãÈù¢Ê∑ªÂä†‰ª•‰∏ãÂÜÖÂÆπ\n{{ if .Site.Params.utteranc.enable }} \u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34; repo=\u0026#34;{{ .Site.Params.utteranc.repo }}\u0026#34; issue-term=\u0026#34;{{ .Site.Params.utteranc.issueTerm }}\u0026#34; theme=\u0026#34;{{ .Site.Params.utteranc.theme }}\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; {{ end }} 2„ÄÅÂàõÂª∫‰∏Ä‰∏™ÂÖ¨ÂºÄÁöÑgithub‰ªìÂ∫ìÂú®Â≠òÂÇ®ËØÑËÆ∫\n3„ÄÅÂÆâË£Öutterances\nÂ∞±ÂÆâË£ÖÂà∞Ëá™Â∑±ÂàöÊâçÂàõÂª∫ÁöÑ‰ªìÂ∫ìÂ∞±ÂèØ‰ª•\nhttps://github.com/apps/utterances\n4„ÄÅÂπ∂ÈÖçÁΩÆÂ≠òÂÇ®ËØÑËÆ∫ÁöÑgithub‰ªìÂ∫ìÔºåËøôÈáå‰ΩøÁî®ÁöÑÊòØ\nparams: utteranc: enable: true repo: \u0026#34;yuanmoc/blogtalks\u0026#34; # Êç¢ÊàêËá™Â∑±Âæó issueTerm: \u0026#34;pathname\u0026#34; theme: \u0026#34;github-light\u0026#34; "},{"id":14,"href":"/docs/project/blogs/plotly/examples/","title":"Visualization via plotly","section":"Plotly","content":"EXAMPLES\n"}]