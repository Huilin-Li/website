<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Huilin Li</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Introduction on Huilin Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Helpul python/pandas scripts</title>
      <link>http://localhost:1313/posts/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python/</guid>
      <description>So&amp;hellip;, I find I used these codes a lot, and they are very helpful for effectivity.&#xA;Assign files into different folders&#xD;#&#xD;Assuming I have 230 files in db_folder, and I want to copy these 230 files into different folders (folder0, folder1 and so on) with at least 50 files in each folder.&#xA;files_list contains names of these 230 files, like files_list=[&amp;quot;file1&amp;quot;, &amp;quot;file2&amp;quot;, ..., &amp;quot;file230&amp;quot;]&#xA;import shutil chunks = [files_list[x:x+50] for x in range(0, len(files_list), 50)] # len(chunks) = 5 for i in range(53): chunk = chunks[i] newpath = &amp;#34;db_folder/folder&amp;#34; + str(i) if not os.</description>
    </item>
    <item>
      <title>PyMol commands</title>
      <link>http://localhost:1313/posts/pymol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/pymol/</guid>
      <description> select residues based on residue number select nterm, resi 42+74+43+56+39 mutate one amino acid cmd.wizard(&amp;#34;mutagenesis&amp;#34;) cmd.fetch(&amp;#34;target.pdb&amp;#34;) cmd.get_wizard().set_mode(&amp;#34;LEU&amp;#34;) cmd.get_wizard().do_select(&amp;#34;chain A and resid 22&amp;#34;) cmd.get_wizard().apply() cmd.save(&amp;#34;mutated_target.pdb&amp;#34;) </description>
    </item>
    <item>
      <title>truncation</title>
      <link>http://localhost:1313/docs/project/binderdesign/truncation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/project/binderdesign/truncation/</guid>
      <description>target.pdb preprocessing&#xD;#&#xD;Assuming we have a target protein target.pdb, and we want to create a binder to target.pdb. The first step is preprocessing target.pdb. Generally spearking, there are two steps we need to think of.&#xA;Truncating target.pdb&#xD;#&#xD;Truncating target protein helps a lot in reducing the stress of computing. For example, we could remove AAs with very low pLDDT or AAs who are far away from the place we want binders to bind with.</description>
    </item>
    <item>
      <title>design binders via RFdiffusion and ProteinMPNN-FastRelax</title>
      <link>http://localhost:1313/docs/project/binderdesign/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/project/binderdesign/design/</guid>
      <description>In my use case, firstly, I tried to de novo design binders. However, I found that designed binders are limited to proteins with only one helix. Then, I changed to design binders based on scaffolds. The design process and scripts I used a lot are as follows.&#xA;Three needed designing environments&#xD;#&#xD;Thanks a lot to the great work, RFdiffusion and ProteinMPNN-FastRelax, as well as AlphaFold2, who give us great ways to design proteins.</description>
    </item>
    <item>
      <title>pae_interaction score</title>
      <link>http://localhost:1313/docs/project/binderdesign/pae_score/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/project/binderdesign/pae_score/</guid>
      <description>As RFdiffusion states, we expect a binder whose pae_interaction score is lower than 10. However, we should also have a look at other scores, such as pLDDT, rmsd.&#xA;check_n = 6 folder_nam = [&amp;#34;folder&amp;#34;+str(i) for i in range(check_n)] score_paths = [&amp;#34;../MyBinderWork/ThreeThoudand_mpnn_af/&amp;#34;+nam+&amp;#34;/score.sc&amp;#34; for nam in folder_nam] ALL_DF = [] for p in score_paths: df = pd.read_csv(p, delim_whitespace=True) ALL_DF.append(df) SCORE_df = pd.concat(ALL_DF)[[&amp;#34;binder_aligned_rmsd&amp;#34;, &amp;#34;pae_binder&amp;#34;, &amp;#34;pae_interaction&amp;#34;, &amp;#34;plddt_binder&amp;#34;, &amp;#34;description&amp;#34;]] An example of one of my experiments</description>
    </item>
    <item>
      <title>backbones filtering</title>
      <link>http://localhost:1313/docs/project/binderdesign/filtering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/project/binderdesign/filtering/</guid>
      <description>In design binders via RFdiffusion and ProteinMPNN-FastRelax, at the beginning of sequence design and binder assessment script mpnn_af.slm, we could perform a fitering step to remove useless backnones.&#xA;In my opinion, this is a very heloful step, because it greatly increase the speed and efficiency of desigining reasonable binders. For example, my target.pdb is like:&#xA;target.pdb (only showing C_{/beta}) atom&#xA;I firstly finding two centers:</description>
    </item>
    <item>
      <title>4 levels of protein structure</title>
      <link>http://localhost:1313/posts/proteinstruture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/proteinstruture/</guid>
      <description>There are four levels of protein structure: primary, secondary, tertiary and quaternary.&#xA;Primary Structure.&#xD;#&#xD;A proteinâ€™s primary structure is the unique sequence of amino acids in each polypeptide chain that makes up the protein.&#xA;fasta file sequence of 20 amino acids Secondary Structure&#xD;#&#xD;Reference:&#xD;#&#xD;3.9: Proteins - Protein Structure </description>
    </item>
    <item>
      <title>All about Latex and Overleaf</title>
      <link>http://localhost:1313/posts/overleaf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/overleaf/</guid>
      <description>\documentclass{article}&#xD;\usepackage[utf8]{inputenc}&#xD;\usepackage{tcolorbox}&#xD;\newtcbox{\inlinecode}{on line, boxrule=0pt, boxsep=0pt, top=2pt, left=2pt, bottom=2pt, right=2pt, colback=gray!15, colframe=white, fontupper={\ttfamily \footnotesize}}&#xD;\begin{document}&#xD;This is a sample of some inline code: \inlinecode{int x = 0;}.&#xD;\end{document} Remove the space on the left hand of the beginning of a paragraph \noindent Typeseeting programming packages/libraries in LaTex \textsc{} </description>
    </item>
    <item>
      <title>Bash Scripts</title>
      <link>http://localhost:1313/posts/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/shell/</guid>
      <description>Bash Scripts&#xD;#&#xD;How to discard changes in VScode?&#xD;#&#xD;Navigate to reporsitory (has .github folder) with changes. Then, git restore &amp;lt;file&amp;gt; Activate conda environment in bash script&#xD;#&#xD;source ~/miniconda3/etc/profile.d/conda.sh conda activate ENV SBATCH Array jobs&#xD;#&#xD;#SBATCH -J array-job&#x9;#SBATCH -a 1-3 #SBATCH -o array-job.%A.%a.log id_list=&amp;#34;./id_list.txt&amp;#34; id=`head -n $SLURM_ARRAY_TASK_ID $id_list | tail -n 1` python3 script.py -in $id srun gpu&#xD;#&#xD;srun -N 1 --ntasks-per-node 2 -p v100 -q gpu --gres=gpu:1 --mem=50G --pty /bin/bash run scripts&#xD;#&#xD;sbatch test.</description>
    </item>
    <item>
      <title>Copy&amp;Paste Continuous and Discrete colors in Plotly</title>
      <link>http://localhost:1313/posts/plotlycolor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/plotlycolor/</guid>
      <description>Discrete color names&#xD;#&#xD;aliceblue&#xD;antiquewhite&#xD;aqua&#xD;aquamarine&#xD;azure&#xD;beige&#xD;bisque&#xD;black&#xD;blanchedalmond&#xD;blue&#xD;blueviolet&#xD;brown&#xD;burlywood&#xD;cadetblue&#xD;chartreuse&#xD;chocolate&#xD;coral&#xD;cornflowerblue&#xD;cornsilk&#xD;crimson&#xD;cyan&#xD;darkblue&#xD;darkcyan&#xD;darkgoldenrod&#xD;darkgray&#xD;darkgrey&#xD;darkgreen&#xD;darkkhaki&#xD;darkmagenta&#xD;darkolivegreen&#xD;darkorange&#xD;darkorchid&#xD;darkred&#xD;darksalmon&#xD;darkseagreen&#xD;darkslateblue&#xD;darkslategray&#xD;darkslategrey&#xD;darkturquoise&#xD;darkviolet&#xD;deeppink&#xD;deepskyblue&#xD;dimgray&#xD;dimgrey&#xD;dodgerblue&#xD;firebrick&#xD;floralwhite&#xD;forestgreen&#xD;fuchsia&#xD;gainsboro&#xD;ghostwhite&#xD;gold&#xD;goldenrod&#xD;gray&#xD;grey&#xD;green&#xD;greenyellow&#xD;honeydew&#xD;hotpink&#xD;indianred&#xD;indigo&#xD;ivory&#xD;khaki&#xD;lavender&#xD;lavenderblush&#xD;lawngreen&#xD;lemonchiffon&#xD;lightblue&#xD;lightcoral&#xD;lightcyan&#xD;lightgoldenrodyellow&#xD;lightgray&#xD;lightgrey&#xD;lightgreen&#xD;lightpink&#xD;lightsalmon&#xD;lightseagreen&#xD;lightskyblue&#xD;lightslategray&#xD;lightslategrey&#xD;lightsteelblue&#xD;lightyellow&#xD;lime&#xD;limegreen&#xD;linen&#xD;magenta&#xD;maroon&#xD;mediumaquamarine&#xD;mediumblue&#xD;mediumorchid&#xD;mediumpurple&#xD;mediumseagreen&#xD;mediumslateblue&#xD;mediumspringgreen&#xD;mediumturquoise&#xD;mediumvioletred&#xD;midnightblue&#xD;mintcream&#xD;mistyrose&#xD;moccasin&#xD;navajowhite&#xD;navy&#xD;oldlace&#xD;olive&#xD;olivedrab&#xD;orange&#xD;orangered&#xD;orchid&#xD;palegoldenrod&#xD;palegreen&#xD;paleturquoise&#xD;palevioletred&#xD;papayawhip&#xD;peachpuff&#xD;peru&#xD;pink&#xD;plum&#xD;powderblue&#xD;purple&#xD;red&#xD;rosybrown&#xD;royalblue&#xD;saddlebrown&#xD;salmon&#xD;sandybrown&#xD;seagreen&#xD;seashell&#xD;sienna&#xD;silver&#xD;skyblue&#xD;slateblue&#xD;slategray&#xD;slategrey&#xD;snow&#xD;springgreen&#xD;steelblue&#xD;tan&#xD;teal&#xD;thistle&#xD;tomato&#xD;turquoise&#xD;violet&#xD;wheat&#xD;white&#xD;whitesmoke&#xD;yellow&#xD;yellowgreen&#xD;Continuous color names&#xD;#&#xD;aggrnyl&#xD;agsunset&#xD;blackbody&#xD;bluered&#xD;blues&#xD;blugrn&#xD;bluyl&#xD;brwnyl&#xD;bugn&#xD;bupu&#xD;burg&#xD;burgyl&#xD;cividis&#xD;darkmint&#xD;electric&#xD;emrld&#xD;gnbu&#xD;greens&#xD;greys&#xD;hot&#xD;inferno&#xD;jet&#xD;magenta&#xD;magma&#xD;mint&#xD;orrd&#xD;oranges&#xD;oryel&#xD;peach&#xD;pinkyl&#xD;plasma&#xD;plotly3&#xD;pubu&#xD;pubugn&#xD;purd&#xD;purp&#xD;purples&#xD;purpor&#xD;rainbow&#xD;rdbu&#xD;rdpu&#xD;redor&#xD;reds&#xD;sunset&#xD;sunsetdark&#xD;teal&#xD;tealgrn&#xD;turbo&#xD;viridis&#xD;ylgn&#xD;ylgnbu&#xD;ylorbr&#xD;ylorrd&#xD;algae&#xD;amp&#xD;deep&#xD;dense&#xD;gray&#xD;haline&#xD;ice&#xD;matter&#xD;solar&#xD;speed&#xD;tempo&#xD;thermal&#xD;turbid&#xD;armyrose&#xD;brbg&#xD;earth&#xD;fall&#xD;geyser&#xD;prgn&#xD;piyg&#xD;picnic&#xD;portland&#xD;puor&#xD;rdgy&#xD;rdylbu&#xD;rdylgn&#xD;spectral&#xD;tealrose&#xD;temps&#xD;tropic&#xD;balance&#xD;curl&#xD;delta&#xD;oxy&#xD;edge&#xD;hsv&#xD;icefire&#xD;phase&#xD;twilight&#xD;mrybm&#xD;mygbm&#xD;Code&#xD;#&#xD;plotlycolors.</description>
    </item>
    <item>
      <title>Drawing a plane perpendicular to a given line in Plotly</title>
      <link>http://localhost:1313/posts/plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/plane/</guid>
      <description>When I am working on my binder design task, I need to select suitable hotspot residues that can lead to design better binders. In addition to hydrophobic amino acids, I also want to focus on the amino acids whose positions are close to the outside edge, and far away from the center of the protein. Therefore, I expect a plane that can approximately cut the protein layer by layer with my expected distance to the outside edge.</description>
    </item>
    <item>
      <title>Excel commands</title>
      <link>http://localhost:1313/posts/excel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/excel/</guid>
      <description> In one row, concat each cell into one cell as string =CONCAT(A1:D1) </description>
    </item>
    <item>
      <title>Hugo commands</title>
      <link>http://localhost:1313/posts/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hugo/</guid>
      <description>Some commands and issues you might want to know when building the website using Hugo, including inserting images and resize and center images,adding emoji, travel map, linking to pages and titles, and so on.&#xA;SUMMARY&#xD;#&#xD;use themes as your own repositories insert and resize images center images add emoji add travel map Why my local website doesn&amp;rsquo;t update after I update my markdown files? link pages and tiles Add Giscus comment in Hugo-book theme Remove git in themes, and use themes as your own repositories.</description>
    </item>
    <item>
      <title>Protein structure measurement</title>
      <link>http://localhost:1313/posts/assessment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/assessment/</guid>
      <description>pLDDT&#xD;#&#xD;&amp;ldquo;predicted Local Distance Difference Test&amp;rdquo; is a per-residue measure of local confidence. It is scaled from 0 to 100, with higher scores indicating higher confidence and usually a more accurate prediction. ref&#xA;PAE&#xD;#&#xD;Predicted Aligned Error (PAE) is a measure of how confident AlphaFold2 is in the relative position of two residues within the predicted structure. PAE is defined as the expected positional error at residue X, measured in Ã…ngstrÃ¶ms (Ã…), if the predicted and actual structures were aligned on residue Y.</description>
    </item>
    <item>
      <title>Website via Hugo Book and deployed by Github Action</title>
      <link>http://localhost:1313/posts/hugobookgithubaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hugobookgithubaction/</guid>
      <description>In Windows10, build personal website via Hugo-book and Github Actions&#xD;#&#xD;This blog is about how to use Hugo to create the local website, and then deploy it on GitHub via Github Action. Everything is step by step.&#xA;Prerequisites&#xD;#&#xD;Git Windows 10 VScode Github account Install Hugo&#xD;#&#xD;In Windows10, right click Windows Powershell and click run as administrator. Refer to How to install chocolatey in Windows to install chocolatey.</description>
    </item>
  </channel>
</rss>
